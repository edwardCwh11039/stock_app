{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e1b53088\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"investment-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Investment History\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"item-value\"\n};\nconst _hoisted_4 = {\n  class: \"item-value\"\n};\nconst _hoisted_5 = {\n  class: \"item-value\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_avatar = _resolveComponent(\"a-avatar\");\n  const _component_a_list_item_meta = _resolveComponent(\"a-list-item-meta\");\n  const _component_a_list_item = _resolveComponent(\"a-list-item\");\n  const _component_a_list = _resolveComponent(\"a-list\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_a_list, {\n    dataSource: $setup.stocks,\n    \"item-layout\": \"horizontal\"\n  }, {\n    renderItem: _withCtx(({\n      item\n    }) => [_createVNode(_component_a_list_item, {\n      style: _normalizeStyle($setup.getRowStyle(item.type)),\n      class: \"list-item\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_list_item_meta, {\n        title: item.companyName,\n        description: item.symbol\n      }, {\n        avatar: _withCtx(() => [_createVNode(_component_a_avatar, {\n          src: item.logoUrl\n        }, null, 8 /* PROPS */, [\"src\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"description\"]), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(item.eachPrice), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, _toDisplayString(item.amount), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(item.eachPrice * item.amount), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"style\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_a_list","dataSource","$setup","stocks","renderItem","_withCtx","item","_component_a_list_item","style","_normalizeStyle","getRowStyle","type","_component_a_list_item_meta","title","companyName","description","symbol","avatar","_component_a_avatar","src","logoUrl","_hoisted_3","_toDisplayString","eachPrice","_hoisted_4","amount","_hoisted_5"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\InvestmentPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"investment-page\">\r\n    <h1>Investment History</h1>\r\n\r\n    <a-list :dataSource=\"stocks\" item-layout=\"horizontal\">\r\n      <template #renderItem=\"{ item }\">\r\n        <a-list-item :style=\"getRowStyle(item.type)\" class=\"list-item\">\r\n          <a-list-item-meta\r\n            :title=\"item.companyName\"\r\n            :description=\"item.symbol\"\r\n          >\r\n            <template #avatar>\r\n              <a-avatar :src=\"item.logoUrl\" />\r\n            </template>\r\n          </a-list-item-meta>\r\n          <div class=\"item-value\">{{ item.eachPrice }}</div>\r\n          <div class=\"item-value\">{{ item.amount }}</div>\r\n          <div class=\"item-value\">{{ item.eachPrice * item.amount }}</div>\r\n        </a-list-item>\r\n      </template>\r\n    </a-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"@/store/data-context\";\r\n\r\nexport default {\r\n  name: \"InvestmentPage\",\r\n  setup() {\r\n    const store = useStore();\r\n    const stocks = store.getStocks;\r\n\r\n    const getRowStyle = (type) => {\r\n      if (type === \"buy\") {\r\n        return {\r\n          backgroundColor: \"#C6F6D5\", // Green background for buy rows\r\n        };\r\n      } else if (type === \"sell\") {\r\n        return {\r\n          backgroundColor: \"#FED7D7\", // Red background for sell rows\r\n        };\r\n      }\r\n    };\r\n    // Use computed property to get investment history from the store\r\n    return { stocks, getRowStyle };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.investment-page {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n.list-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 15px;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.item-value {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAA2B,YAAvB,oBAAkB;;EAaXD,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;;;;;uBAhB/BE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAA2B,EAE3BC,YAAA,CAgBSC,iBAAA;IAhBAC,UAAU,EAAEC,MAAA,CAAAC,MAAM;IAAE,aAAW,EAAC;;IAC5BC,UAAU,EAAAC,QAAA,CACnB,CAYc;MAbSC;IAAI,OAC3BP,YAAA,CAYcQ,sBAAA;MAZAC,KAAK,EAAAC,eAAA,CAAEP,MAAA,CAAAQ,WAAW,CAACJ,IAAI,CAACK,IAAI;MAAGjB,KAAK,EAAC;;wBACjD,MAOmB,CAPnBK,YAAA,CAOmBa,2BAAA;QANhBC,KAAK,EAAEP,IAAI,CAACQ,WAAW;QACvBC,WAAW,EAAET,IAAI,CAACU;;QAERC,MAAM,EAAAZ,QAAA,CACf,MAAgC,CAAhCN,YAAA,CAAgCmB,mBAAA;UAArBC,GAAG,EAAEb,IAAI,CAACc;;;qEAGzBzB,mBAAA,CAAkD,OAAlD0B,UAAkD,EAAAC,gBAAA,CAAvBhB,IAAI,CAACiB,SAAS,kBACzC5B,mBAAA,CAA+C,OAA/C6B,UAA+C,EAAAF,gBAAA,CAApBhB,IAAI,CAACmB,MAAM,kBACtC9B,mBAAA,CAAgE,OAAhE+B,UAAgE,EAAAJ,gBAAA,CAArChB,IAAI,CAACiB,SAAS,GAAGjB,IAAI,CAACmB,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}