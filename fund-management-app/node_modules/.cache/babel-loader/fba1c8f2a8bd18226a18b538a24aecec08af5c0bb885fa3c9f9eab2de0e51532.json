{"ast":null,"code":"import axios from \"axios\";\nconst API_KEY = \"YOUR_API_KEY\"; // Replace with your Twelve Data API key\nconst API_BASE_URL = \"https://api.twelvedata.com\";\n\n// Method to fetch stock details for a specific symbol\nexport const fetchStockDetails = async symbol => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/quote`, {\n      params: {\n        symbol: symbol,\n        apikey: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    handleApiError(error);\n    throw error;\n  }\n};\n\n// Error handler function (similar to the previous example)\nconst handleApiError = error => {\n  // Handle API errors\n};","map":{"version":3,"names":["axios","API_KEY","API_BASE_URL","fetchStockDetails","symbol","response","get","params","apikey","data","error","handleApiError"],"sources":["C:/Users/Edwaed/Desktop/fund-management-app/src/services/fundAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"YOUR_API_KEY\"; // Replace with your Twelve Data API key\r\nconst API_BASE_URL = \"https://api.twelvedata.com\";\r\n\r\n// Method to fetch stock details for a specific symbol\r\nexport const fetchStockDetails = async (symbol) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/quote`, {\r\n      params: {\r\n        symbol: symbol,\r\n        apikey: API_KEY,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    handleApiError(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Error handler function (similar to the previous example)\r\nconst handleApiError = (error) => {\r\n  // Handle API errors\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc,CAAC,CAAC;AAChC,MAAMC,YAAY,GAAG,4BAA4B;;AAEjD;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEJ,YAAa,QAAO,EAAE;MACxDK,MAAM,EAAE;QACNH,MAAM,EAAEA,MAAM;QACdI,MAAM,EAAEP;MACV;IACF,CAAC,CAAC;IAEF,OAAOI,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,cAAc,CAACD,KAAK,CAAC;IACrB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,cAAc,GAAID,KAAK,IAAK;EAChC;AAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}