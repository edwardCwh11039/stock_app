{"ast":null,"code":"import _defineProperty from \"C:/Users/Edwaed/Desktop/stock_app/fund-management-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport axios from \"axios\";\nimport { message } from \"ant-design-vue\";\nconst apiKey = \"4L899V8QWQXTQP85\";\nconst API_BASE_URL = \"https://www.alphavantage.co\";\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  responseType: \"json\"\n});\nclass BaseAlphaAPI {\n  constructor() {\n    _defineProperty(this, \"showMessage\", () => res => {\n      const {\n        status\n      } = res;\n      const isError = status === \"error\";\n      if (isError) {\n        message.error(res.message);\n      }\n      return res;\n    });\n  }\n  async get(params) {\n    params[\"apiKey\"] = apiKey;\n    let path = `query?${Object.entries(params).map(([key, value]) => `${key}=${value}`).join(\"&\")}`;\n    return axiosInstance.get(path).then(res => res.data).catch(err => this.errorHandler(err));\n  }\n  errorHandler(err) {\n    const msg = err.message;\n    const code = err.code;\n    return {\n      msg,\n      code\n    };\n  }\n}\nclass AlphaAPI extends BaseAlphaAPI {\n  getIntradayStock(symbol) {\n    return this.get({\n      function: \"TIME_SERIES_INTRADAY\",\n      symbol: symbol,\n      interval: \"5min\"\n    }).then(this.showMessage());\n  }\n  getDailyStock(symbol) {\n    return this.get({\n      function: \"TIME_SERIES_DAILY\",\n      symbol: symbol\n    }).then(this.showMessage());\n  }\n  topGainersLosers() {\n    return this.get({\n      function: \"TOP_GAINERS_LOSERS\"\n    }).then(this.showMessage());\n  }\n  companyOverview(symbol) {\n    return this.get({\n      function: \"OVERVIEW\",\n      symbol: symbol\n    }).then(this.showMessage());\n  }\n}\nexport const alphaApi = new AlphaAPI();\nexport default alphaApi;","map":{"version":3,"names":["axios","message","apiKey","API_BASE_URL","axiosInstance","create","baseURL","responseType","BaseAlphaAPI","constructor","_defineProperty","res","status","isError","error","get","params","path","Object","entries","map","key","value","join","then","data","catch","err","errorHandler","msg","code","AlphaAPI","getIntradayStock","symbol","function","interval","showMessage","getDailyStock","topGainersLosers","companyOverview","alphaApi"],"sources":["C:/Users/Edwaed/Desktop/stock_app/fund-management-app/src/services/alphaAPI.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { message } from \"ant-design-vue\";\r\n\r\nconst apiKey = \"4L899V8QWQXTQP85\";\r\nconst API_BASE_URL = \"https://www.alphavantage.co\";\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  responseType: \"json\",\r\n});\r\n\r\nclass BaseAlphaAPI {\r\n  async get(params) {\r\n    params[\"apiKey\"] = apiKey;\r\n    let path = `query?${Object.entries(params)\r\n      .map(([key, value]) => `${key}=${value}`)\r\n      .join(\"&\")}`;\r\n\r\n    return axiosInstance\r\n      .get(path)\r\n      .then((res) => res.data)\r\n      .catch((err) => this.errorHandler(err));\r\n  }\r\n\r\n  showMessage = () => (res) => {\r\n    const { status } = res;\r\n    const isError = status === \"error\";\r\n\r\n    if (isError) {\r\n      message.error(res.message);\r\n    }\r\n\r\n    return res;\r\n  };\r\n\r\n  errorHandler(err) {\r\n    const msg = err.message;\r\n    const code = err.code;\r\n\r\n    return { msg, code };\r\n  }\r\n}\r\n\r\nclass AlphaAPI extends BaseAlphaAPI {\r\n  getIntradayStock(symbol) {\r\n    return this.get({\r\n      function: \"TIME_SERIES_INTRADAY\",\r\n      symbol: symbol,\r\n      interval: \"5min\",\r\n    }).then(this.showMessage());\r\n  }\r\n  getDailyStock(symbol) {\r\n    return this.get({\r\n      function: \"TIME_SERIES_DAILY\",\r\n      symbol: symbol,\r\n    }).then(this.showMessage());\r\n  }\r\n  topGainersLosers() {\r\n    return this.get({\r\n      function: \"TOP_GAINERS_LOSERS\",\r\n    }).then(this.showMessage());\r\n  }\r\n  companyOverview(symbol) {\r\n    return this.get({\r\n      function: \"OVERVIEW\",\r\n      symbol: symbol,\r\n    }).then(this.showMessage());\r\n  }\r\n}\r\n\r\nexport const alphaApi = new AlphaAPI();\r\n\r\nexport default alphaApi;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,gBAAgB;AAExC,MAAMC,MAAM,GAAG,kBAAkB;AACjC,MAAMC,YAAY,GAAG,6BAA6B;AAClD,MAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACjCC,OAAO,EAAEH,YAAY;EACrBI,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,MAAMC,YAAY,CAAC;EAAAC,YAAA;IAAAC,eAAA,sBAaH,MAAOC,GAAG,IAAK;MAC3B,MAAM;QAAEC;MAAO,CAAC,GAAGD,GAAG;MACtB,MAAME,OAAO,GAAGD,MAAM,KAAK,OAAO;MAElC,IAAIC,OAAO,EAAE;QACXZ,OAAO,CAACa,KAAK,CAACH,GAAG,CAACV,OAAO,CAAC;MAC5B;MAEA,OAAOU,GAAG;IACZ,CAAC;EAAA;EArBD,MAAMI,GAAGA,CAACC,MAAM,EAAE;IAChBA,MAAM,CAAC,QAAQ,CAAC,GAAGd,MAAM;IACzB,IAAIe,IAAI,GAAI,SAAQC,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC,CACvCI,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAM,GAAED,GAAI,IAAGC,KAAM,EAAC,CAAC,CACxCC,IAAI,CAAC,GAAG,CAAE,EAAC;IAEd,OAAOnB,aAAa,CACjBW,GAAG,CAACE,IAAI,CAAC,CACTO,IAAI,CAAEb,GAAG,IAAKA,GAAG,CAACc,IAAI,CAAC,CACvBC,KAAK,CAAEC,GAAG,IAAK,IAAI,CAACC,YAAY,CAACD,GAAG,CAAC,CAAC;EAC3C;EAaAC,YAAYA,CAACD,GAAG,EAAE;IAChB,MAAME,GAAG,GAAGF,GAAG,CAAC1B,OAAO;IACvB,MAAM6B,IAAI,GAAGH,GAAG,CAACG,IAAI;IAErB,OAAO;MAAED,GAAG;MAAEC;IAAK,CAAC;EACtB;AACF;AAEA,MAAMC,QAAQ,SAASvB,YAAY,CAAC;EAClCwB,gBAAgBA,CAACC,MAAM,EAAE;IACvB,OAAO,IAAI,CAAClB,GAAG,CAAC;MACdmB,QAAQ,EAAE,sBAAsB;MAChCD,MAAM,EAAEA,MAAM;MACdE,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACX,IAAI,CAAC,IAAI,CAACY,WAAW,CAAC,CAAC,CAAC;EAC7B;EACAC,aAAaA,CAACJ,MAAM,EAAE;IACpB,OAAO,IAAI,CAAClB,GAAG,CAAC;MACdmB,QAAQ,EAAE,mBAAmB;MAC7BD,MAAM,EAAEA;IACV,CAAC,CAAC,CAACT,IAAI,CAAC,IAAI,CAACY,WAAW,CAAC,CAAC,CAAC;EAC7B;EACAE,gBAAgBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACvB,GAAG,CAAC;MACdmB,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACV,IAAI,CAAC,IAAI,CAACY,WAAW,CAAC,CAAC,CAAC;EAC7B;EACAG,eAAeA,CAACN,MAAM,EAAE;IACtB,OAAO,IAAI,CAAClB,GAAG,CAAC;MACdmB,QAAQ,EAAE,UAAU;MACpBD,MAAM,EAAEA;IACV,CAAC,CAAC,CAACT,IAAI,CAAC,IAAI,CAACY,WAAW,CAAC,CAAC,CAAC;EAC7B;AACF;AAEA,OAAO,MAAMI,QAAQ,GAAG,IAAIT,QAAQ,CAAC,CAAC;AAEtC,eAAeS,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}