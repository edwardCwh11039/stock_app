{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRoute } from \"vue-router\";\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nimport { Line } from \"vue-chartjs\";\nimport \"chart.js/auto\";\nexport default {\n  components: {\n    Line\n  },\n  setup(props, context) {\n    const route = useRoute();\n    const symbol = ref(route.params.symbol);\n    const dailyStockData = ref(null);\n    const isLoading = ref(true);\n    const fetchDailyStockData = async () => {\n      try {\n        const apiKey = \"4L899V8QWQXTQP85\";\n        const response = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol.value}&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`);\n        if (response.status === 200) {\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\n        }\n      } catch (error) {\n        console.error(\"Error fetching daily stock data:\", error);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const chartData = ref(null);\n    const chartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      layout: {\n        padding: {\n          bottom: 20,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    };\n    onMounted(() => {\n      fetchDailyStockData();\n      formatData(dailyStockData);\n      isLoading.value = false;\n    });\n    const formatData = data => {\n      const chartLabels = [];\n      const chartValues = [];\n      for (const date in data) {\n        chartLabels.push(date);\n        chartValues.push(parseFloat(data[date][\"1. open\"]));\n      }\n      chartData.value = {\n        labels: chartLabels,\n        datasets: [{\n          label: symbol.value + \"Stock Price\",\n          data: chartValues,\n          borderColor: \"blue\",\n          fill: true\n        }]\n      };\n      context.emit(\"currentPrice\", chartValues);\n    };\n    return {\n      chartData,\n      chartOptions,\n      isLoading,\n      symbol,\n      Line\n    };\n  }\n};","map":{"version":3,"names":["useRoute","ref","onMounted","axios","Line","components","setup","props","context","route","symbol","params","dailyStockData","isLoading","fetchDailyStockData","apiKey","response","get","value","status","data","error","console","chartData","chartOptions","responsive","plugins","legend","display","layout","padding","bottom","left","right","top","formatData","chartLabels","chartValues","date","push","parseFloat","labels","datasets","label","borderColor","fill","emit"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\components\\StockChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"isLoading\">\r\n      <a-spin size=\"large\" tip=\"loading\"></a-spin>\r\n    </div>\r\n    <div v-else>\r\n      <Line id=\"stockLine\" :options=\"chartOptions\" :data=\"chartData\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"vue-chartjs\";\r\nimport \"chart.js/auto\";\r\n\r\nexport default {\r\n  components: { Line },\r\n  setup(props, context) {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n\r\n    const fetchDailyStockData = async () => {\r\n      try {\r\n        const apiKey = \"4L899V8QWQXTQP85\";\r\n        const response = await axios.get(\r\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n            symbol.value\r\n          }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching daily stock data:\", error);\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n    const chartData = ref(null);\r\n    const chartOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n      layout: {\r\n        padding: {\r\n          bottom: 20,\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n        },\r\n      },\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchDailyStockData();\r\n\r\n      formatData(dailyStockData);\r\n      isLoading.value = false;\r\n    });\r\n\r\n    const formatData = (data) => {\r\n      const chartLabels = [];\r\n      const chartValues = [];\r\n      for (const date in data) {\r\n        chartLabels.push(date);\r\n        chartValues.push(parseFloat(data[date][\"1. open\"]));\r\n      }\r\n      chartData.value = {\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: symbol.value + \"Stock Price\",\r\n            data: chartValues,\r\n            borderColor: \"blue\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      };\r\n      context.emit(\"currentPrice\", chartValues);\r\n    };\r\n\r\n    return {\r\n      chartData,\r\n      chartOptions,\r\n      isLoading,\r\n      symbol,\r\n      Line,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAYA,SAASA,QAAO,QAAS,YAAY;AACrC,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,IAAG,QAAS,aAAa;AAClC,OAAO,eAAe;AAEtB,eAAe;EACbC,UAAU,EAAE;IAAED;EAAK,CAAC;EACpBE,KAAKA,CAACC,KAAK,EAAEC,OAAO,EAAE;IACpB,MAAMC,KAAI,GAAIT,QAAQ,CAAC,CAAC;IACxB,MAAMU,MAAK,GAAIT,GAAG,CAACQ,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,cAAa,GAAIX,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMY,SAAQ,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMa,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,MAAK,GAAI,kBAAkB;QACjC,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAC7B,uEACCP,MAAM,CAACQ,KACR,2BAA0BR,MAAM,CAACQ,KAAI,KAAM,KAAI,GAAI,MAAK,GAAIH,MAAO,EACtE,CAAC;QAED,IAAIC,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BP,cAAc,CAACM,KAAI,GAAIF,QAAQ,CAACI,IAAI,CAAC,qBAAqB,CAAC;QAC7D;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,UAAU;QACRR,SAAS,CAACK,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IACD,MAAMK,SAAQ,GAAItB,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMuB,YAAW,GAAI;MACnBC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;QACX;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPC,MAAM,EAAE,EAAE;UACVC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,GAAG,EAAE;QACP;MACF;IACF,CAAC;IAEDhC,SAAS,CAAC,MAAM;MACdY,mBAAmB,CAAC,CAAC;MAErBqB,UAAU,CAACvB,cAAc,CAAC;MAC1BC,SAAS,CAACK,KAAI,GAAI,KAAK;IACzB,CAAC,CAAC;IAEF,MAAMiB,UAAS,GAAKf,IAAI,IAAK;MAC3B,MAAMgB,WAAU,GAAI,EAAE;MACtB,MAAMC,WAAU,GAAI,EAAE;MACtB,KAAK,MAAMC,IAAG,IAAKlB,IAAI,EAAE;QACvBgB,WAAW,CAACG,IAAI,CAACD,IAAI,CAAC;QACtBD,WAAW,CAACE,IAAI,CAACC,UAAU,CAACpB,IAAI,CAACkB,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;MACrD;MACAf,SAAS,CAACL,KAAI,GAAI;QAChBuB,MAAM,EAAEL,WAAW;QACnBM,QAAQ,EAAE,CACR;UACEC,KAAK,EAAEjC,MAAM,CAACQ,KAAI,GAAI,aAAa;UACnCE,IAAI,EAAEiB,WAAW;UACjBO,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE;QACR,CAAC;MAEL,CAAC;MACDrC,OAAO,CAACsC,IAAI,CAAC,cAAc,EAAET,WAAW,CAAC;IAC3C,CAAC;IAED,OAAO;MACLd,SAAS;MACTC,YAAY;MACZX,SAAS;MACTH,MAAM;MACNN;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}