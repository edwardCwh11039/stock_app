{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_spin, {\n    size: \"large\",\n    tip: \"loading\"\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_Line, {\n    id: \"stockLine\",\n    options: $setup.chartOptions,\n    data: $setup.chartData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])]))]);\n}","map":{"version":3,"names":["_createElementBlock","$setup","isLoading","_hoisted_1","_createVNode","_component_a_spin","size","tip","_hoisted_2","_component_Line","id","options","chartOptions","data","chartData"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\components\\StockChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"isLoading\">\r\n      <a-spin size=\"large\" tip=\"loading\"></a-spin>\r\n    </div>\r\n    <div v-else>\r\n      <Line id=\"stockLine\" :options=\"chartOptions\" :data=\"chartData\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"vue-chartjs\";\r\nimport \"chart.js/auto\";\r\nimport { stockExampleData } from \"@/store/stockDataExample\";\r\nexport default {\r\n  components: { Line },\r\n  setup(props, context) {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const dailyStockData = ref(stockExampleData);\r\n    const isLoading = ref(true);\r\n    console.log(dailyStockData);\r\n    const fetchDailyStockData = async () => {\r\n      try {\r\n        const apiKey = \"4L899V8QWQXTQP85\";\r\n        const response = await axios.get(\r\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n            symbol.value\r\n          }&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n        );\r\n\r\n        dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n        formatData(dailyStockData.value);\r\n      } catch (error) {\r\n        console.error(\"Error fetching daily stock data:\", error);\r\n        // due to api limit, if error happen use example data\r\n        console.log(dailyStockData);\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n    const chartData = ref(null);\r\n    const chartOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n      layout: {\r\n        padding: {\r\n          bottom: 20,\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n        },\r\n      },\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    const formatData = (data) => {\r\n      const chartLabels = [];\r\n      const chartValues = [];\r\n      for (const date in data) {\r\n        chartLabels.push(date);\r\n        chartValues.push(parseFloat(data[date][\"1. open\"]));\r\n      }\r\n      chartData.value = {\r\n        labels: chartLabels.reverse(),\r\n        datasets: [\r\n          {\r\n            label: symbol.value + \"Stock Price\",\r\n            data: chartValues.reverse(),\r\n            borderColor: \"blue\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      };\r\n      context.emit(\"currentPrice\", chartValues[chartValues.length - 1]);\r\n    };\r\n\r\n    return {\r\n      chartData,\r\n      chartOptions,\r\n      isLoading,\r\n      symbol,\r\n      Line,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;;uBACEA,mBAAA,CAOM,cANOC,MAAA,CAAAC,SAAS,I,cAApBF,mBAAA,CAEM,OAAAG,UAAA,GADJC,YAAA,CAA4CC,iBAAA;IAApCC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;yBAE3BP,mBAAA,CAEM,OAAAQ,UAAA,GADJJ,YAAA,CAAiEK,eAAA;IAA3DC,EAAE,EAAC,WAAW;IAAEC,OAAO,EAAEV,MAAA,CAAAW,YAAY;IAAGC,IAAI,EAAEZ,MAAA,CAAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}