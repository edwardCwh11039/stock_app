{"ast":null,"code":"import StockChart from \"@/components/StockChart.vue\";\nimport { useRoute } from \"vue-router\";\nimport { ref, computed } from \"vue\";\nimport { stocksArr } from \"@/store/stockArr\";\nimport { FallOutlined, RiseOutlined, ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons-vue\";\nimport { useStore } from \"@/store/data-context\";\nexport default {\n  components: {\n    StockChart,\n    FallOutlined,\n    RiseOutlined,\n    ArrowUpOutlined,\n    ArrowDownOutlined\n  },\n  setup() {\n    const store = useStore();\n    const currentPrice = ref(null);\n    const route = useRoute();\n    const symbol = ref(route.params.symbol);\n    const companyInfo = stocksArr.find(stock => stock.Symbol === symbol.value);\n    const priceChangeClass = companyInfo.PriceChange.includes(\"-\") ? \"negative-price\" : \"positive-price\";\n    const isModalVisible = ref(false);\n    const modalTitle = ref(\"\");\n    const amount = ref(1);\n    const stockToBuy = ref(0);\n    const showModal = action => {\n      isModalVisible.value = true;\n      modalTitle.value = (action === \"buy\" ? \"Buy\" : \"Sell\").concat(\" \", symbol.value, \" Stock\");\n    };\n    const handleModalConfirm = () => {\n      isModalVisible.value = false;\n    };\n    const amountToBuy = ref(30);\n    const formatter = value => {\n      return `$${value}`;\n    };\n    const inputChange = value => {\n      stockToBuy.value = Number(value).toFixed(0);\n      let currentAmount = value * currentPrice.value;\n      amountToBuy.value = currentAmount.toFixed(2);\n    };\n    const sliderChange = value => {\n      amountToBuy.value = Number(value).toFixed(2);\n      let currentStock = value / currentPrice.value;\n      amountToBuy.value = currentStock.toFixed(0);\n    };\n    const maxSliderValue = computed(() => {\n      let price = currentPrice.value;\n      // Calculate the maximum slider value based on balance and currentPriceOfStock\n      return Math.floor(Number(store.getBalance) / Number(currentPrice.value)) * Number(price);\n    });\n    const maxInputValue = computed(() => {\n      return Math.floor(Number(store.getBalance) / Number(currentPrice.value));\n    });\n\n    // form child (emit)\n    const getPrice = price => {\n      currentPrice.value = price[0];\n    };\n    return {\n      store,\n      symbol,\n      companyInfo,\n      priceChangeClass,\n      isModalVisible,\n      modalTitle,\n      amount,\n      showModal,\n      handleModalConfirm,\n      amountToBuy,\n      formatter,\n      stockToBuy,\n      getPrice,\n      maxSliderValue,\n      maxInputValue,\n      inputChange,\n      sliderChange,\n      currentPrice\n    };\n  }\n};","map":{"version":3,"names":["StockChart","useRoute","ref","computed","stocksArr","FallOutlined","RiseOutlined","ArrowUpOutlined","ArrowDownOutlined","useStore","components","setup","store","currentPrice","route","symbol","params","companyInfo","find","stock","Symbol","value","priceChangeClass","PriceChange","includes","isModalVisible","modalTitle","amount","stockToBuy","showModal","action","concat","handleModalConfirm","amountToBuy","formatter","inputChange","Number","toFixed","currentAmount","sliderChange","currentStock","maxSliderValue","price","Math","floor","getBalance","maxInputValue","getPrice"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"stock-detail\">\r\n    <a-col :span=\"24\">\r\n      <a-row justify=\"space-between\">\r\n        <a-col>\r\n          <a-row>\r\n            <a-col>\r\n              <img :src=\"companyInfo.LogoUrl\" alt=\"Company Logo\" class=\"logo\" />\r\n            </a-col>\r\n            <a-col\r\n              ><a-row>\r\n                <h2>{{ companyInfo.CompanyName }}</h2>\r\n              </a-row>\r\n              <a-row>\r\n                <p>{{ symbol }}</p>\r\n              </a-row></a-col\r\n            >\r\n          </a-row>\r\n        </a-col>\r\n        <a-col>\r\n          <div :class=\"priceChangeClass\">\r\n            <div v-if=\"companyInfo.PriceChange.includes('-')\">\r\n              <FallOutlined />{{ companyInfo.PriceChange }}\r\n            </div>\r\n            <div v-else><RiseOutlined />{{ companyInfo.PriceChange }}</div>\r\n          </div>\r\n        </a-col>\r\n      </a-row>\r\n      <div :style=\"{ marginTop: '10px', marginBottom: '10px' }\">\r\n        <StockChart :symbol=\"symbol\" @currentPrice=\"getPrice\" />\r\n      </div>\r\n      <a-row justify=\"space-around\">\r\n        <a-col :span=\"10\">\r\n          <a-button\r\n            class=\"buy-button\"\r\n            type=\"primary\"\r\n            @click=\"showModal('buy')\"\r\n            block\r\n          >\r\n            Buy\r\n          </a-button>\r\n        </a-col>\r\n        <a-col :span=\"10\">\r\n          <a-button\r\n            class=\"sell-button\"\r\n            type=\"primary\"\r\n            danger\r\n            @click=\"showModal('sell')\"\r\n            block\r\n          >\r\n            Sell\r\n          </a-button>\r\n        </a-col>\r\n      </a-row>\r\n    </a-col>\r\n    <a-modal\r\n      v-model:open=\"isModalVisible\"\r\n      :title=\"modalTitle\"\r\n      ok-text=\"Confirm\"\r\n      cancel-text=\"Cancel\"\r\n      @ok=\"handleModalConfirm\"\r\n    >\r\n      <p>Amount:</p>\r\n      \r\n      <p>Stock:</p>\r\n      <a-input-number\r\n        id=\"inputNumber\"\r\n        v-model:value=\"stockToBuy\"\r\n        :min=\"0\"\r\n        @change=\"inputChange\"\r\n        :max=\"maxInputValue\"\r\n      >\r\n        <template #upIcon>\r\n          <ArrowUpOutlined />\r\n        </template>\r\n        <template #downIcon>\r\n          <ArrowDownOutlined />\r\n        </template>\r\n      </a-input-number>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StockChart from \"@/components/StockChart.vue\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, computed } from \"vue\";\r\nimport { stocksArr } from \"@/store/stockArr\";\r\nimport {\r\n  FallOutlined,\r\n  RiseOutlined,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons-vue\";\r\nimport { useStore } from \"@/store/data-context\";\r\n\r\nexport default {\r\n  components: {\r\n    StockChart,\r\n    FallOutlined,\r\n    RiseOutlined,\r\n    ArrowUpOutlined,\r\n    ArrowDownOutlined,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const currentPrice = ref(null);\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const companyInfo = stocksArr.find(\r\n      (stock) => stock.Symbol === symbol.value\r\n    );\r\n    const priceChangeClass = companyInfo.PriceChange.includes(\"-\")\r\n      ? \"negative-price\"\r\n      : \"positive-price\";\r\n    const isModalVisible = ref(false);\r\n    const modalTitle = ref(\"\");\r\n    const amount = ref(1);\r\n    const stockToBuy = ref(0);\r\n    const showModal = (action) => {\r\n      isModalVisible.value = true;\r\n      modalTitle.value = (action === \"buy\" ? \"Buy\" : \"Sell\").concat(\r\n        \" \",\r\n        symbol.value,\r\n        \" Stock\"\r\n      );\r\n    };\r\n    const handleModalConfirm = () => {\r\n      isModalVisible.value = false;\r\n    };\r\n    const amountToBuy = ref(30);\r\n    const formatter = (value) => {\r\n      return `$${value}`;\r\n    };\r\n\r\n    const inputChange = (value) => {\r\n      stockToBuy.value = Number(value).toFixed(0);\r\n      let currentAmount = value * currentPrice.value;\r\n      amountToBuy.value = currentAmount.toFixed(2);\r\n    };\r\n    const sliderChange = (value) => {\r\n      amountToBuy.value = Number(value).toFixed(2);\r\n      let currentStock = value / currentPrice.value;\r\n      amountToBuy.value = currentStock.toFixed(0);\r\n    };\r\n    const maxSliderValue = computed(() => {\r\n      let price = currentPrice.value;\r\n      // Calculate the maximum slider value based on balance and currentPriceOfStock\r\n      return (\r\n        Math.floor(Number(store.getBalance) / Number(currentPrice.value)) *\r\n        Number(price)\r\n      );\r\n    });\r\n\r\n    const maxInputValue = computed(() => {\r\n      return Math.floor(Number(store.getBalance) / Number(currentPrice.value));\r\n    });\r\n\r\n    // form child (emit)\r\n    const getPrice = (price) => {\r\n      currentPrice.value = price[0];\r\n    };\r\n    return {\r\n      store,\r\n      symbol,\r\n      companyInfo,\r\n      priceChangeClass,\r\n      isModalVisible,\r\n      modalTitle,\r\n      amount,\r\n      showModal,\r\n      handleModalConfirm,\r\n      amountToBuy,\r\n      formatter,\r\n      stockToBuy,\r\n      getPrice,\r\n      maxSliderValue,\r\n      maxInputValue,\r\n      inputChange,\r\n      sliderChange,\r\n      currentPrice,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.stock-detail {\r\n  max-height: 75vh;\r\n  overflow: auto;\r\n}\r\n\r\n.logo {\r\n  height: 50px;\r\n  width: 50px;\r\n  max-width: 100px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.price {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.positive-price {\r\n  color: green;\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.negative-price {\r\n  color: red;\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}