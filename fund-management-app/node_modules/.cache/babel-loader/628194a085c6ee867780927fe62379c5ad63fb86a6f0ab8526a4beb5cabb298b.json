{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport StockChart from \"@/components/StockChart.vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { ref, computed, watch, onMounted } from \"vue\";\nimport { stocksArr } from \"@/store/stockArr\";\nimport { FallOutlined, RiseOutlined, ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons-vue\";\nimport { useStore } from \"@/store/data-context\";\nexport default {\n  components: {\n    StockChart,\n    FallOutlined,\n    RiseOutlined,\n    ArrowUpOutlined,\n    ArrowDownOutlined\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const currentPrice = ref(null);\n    const symbol = ref(route.params.symbol);\n    const isModalVisible = ref(false);\n    const modalTitle = ref(\"\");\n    const stockToBuy = ref(0);\n    const amountToBuy = ref(0);\n    const selectedOption = ref(\"\");\n    const companyInfo = stocksArr.find(stock => stock.symbol === symbol.value);\n    const priceChangeClass = companyInfo.priceChange.includes(\"-\") ? \"negative-price\" : \"positive-price\";\n    const showModal = action => {\n      selectedOption.value = action === \"buy\" ? \"buy\" : \"sell\";\n      isModalVisible.value = true;\n      modalTitle.value = (action === \"buy\" ? \"Buy\" : \"Sell\").concat(\" \", symbol.value, \" Stock\");\n    };\n    const handleModalConfirm = () => {\n      isModalVisible.value = false;\n      const newStock = {\n        symbol: symbol.value,\n        amount: stockToBuy.value,\n        eachPrice: currentPrice.value,\n        type: selectedOption.value,\n        companyName: companyInfo.CcmpanyName,\n        logoUrl: companyInfo.logoUrl\n      };\n      store.addStock(newStock);\n\n      // Navigate to the \"Investment\" page\n      router.push({\n        name: \"Investment\"\n      });\n    };\n    const formatter = () => {\n      return `$${amountToBuy.value}`;\n    };\n    const inputChange = value => {\n      stockToBuy.value = Number(value).toFixed(0);\n      let currentAmount = value * currentPrice.value;\n      amountToBuy.value = currentAmount;\n    };\n    const sliderChange = value => {\n      let currentStock = value / currentPrice.value;\n      stockToBuy.value = currentStock.toFixed(0);\n    };\n    const maxSliderValue = computed(() => {\n      let price = currentPrice.value;\n      // Calculate the maximum slider value based on balance and currentPriceOfStock\n      return Math.floor(Number(store.getBalance) / Number(currentPrice.value)) * Number(price);\n    });\n    const maxInputValue = computed(() => {\n      return Math.floor(Number(store.getBalance) / Number(currentPrice.value));\n    });\n\n    // form child (emit)\n    const getPrice = price => {\n      currentPrice.value = price;\n    };\n    const hasStock = computed(() => {\n      return store.hasStock(symbol.value);\n    });\n    watch(store.stocks, () => {\n      const boughtStocks = [...store.stocks].filter(stock => {\n        return stock.symbol === symbol.value && stock.Type === \"buy\";\n      });\n      const soldStocks = [...store.stocks].filter(stock => {\n        return stock.symbol === symbol.value && stock.Type === \"sell\";\n      });\n      let totalBoughtStocks = 0;\n      if (boughtStocks) {\n        totalBoughtStocks = boughtStocks.reduce((acc, cur) => acc + Number(cur.amount), 0);\n      }\n      let totalSoldStocks = 0;\n      if (soldStocks) {\n        totalSoldStocks = soldStocks.reduce((acc, cur) => acc + Number(cur.amount), 0);\n      }\n      return Number(totalBoughtStocks - totalSoldStocks).toFixed(0);\n    });\n    return {\n      store,\n      symbol,\n      companyInfo,\n      priceChangeClass,\n      isModalVisible,\n      modalTitle,\n      showModal,\n      handleModalConfirm,\n      amountToBuy,\n      formatter,\n      stockToBuy,\n      getPrice,\n      maxSliderValue,\n      maxInputValue,\n      inputChange,\n      sliderChange,\n      currentPrice,\n      hasStock\n    };\n  }\n};","map":{"version":3,"names":["StockChart","useRoute","useRouter","ref","computed","watch","onMounted","stocksArr","FallOutlined","RiseOutlined","ArrowUpOutlined","ArrowDownOutlined","useStore","components","setup","store","router","route","currentPrice","symbol","params","isModalVisible","modalTitle","stockToBuy","amountToBuy","selectedOption","companyInfo","find","stock","value","priceChangeClass","priceChange","includes","showModal","action","concat","handleModalConfirm","newStock","amount","eachPrice","type","companyName","CcmpanyName","logoUrl","addStock","push","name","formatter","inputChange","Number","toFixed","currentAmount","sliderChange","currentStock","maxSliderValue","price","Math","floor","getBalance","maxInputValue","getPrice","hasStock","stocks","boughtStocks","filter","Type","soldStocks","totalBoughtStocks","reduce","acc","cur","totalSoldStocks"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"stock-detail\">\r\n    <a-col :span=\"24\">\r\n      <a-row justify=\"space-between\">\r\n        <a-col>\r\n          <a-row>\r\n            <a-col>\r\n              <img :src=\"companyInfo.logoUrl\" alt=\"Company Logo\" class=\"logo\" />\r\n            </a-col>\r\n            <a-col\r\n              ><a-row>\r\n                <h2>{{ companyInfo.companyName }}</h2>\r\n              </a-row>\r\n              <a-row>\r\n                <p>{{ symbol }}</p>\r\n              </a-row>\r\n            </a-col>\r\n          </a-row>\r\n        </a-col>\r\n        <a-col>\r\n          <a-col class=\"price\">\r\n            <span>\r\n              <b>$ {{ currentPrice }}</b>\r\n            </span>\r\n            <div :class=\"priceChangeClass\">\r\n              <div v-if=\"companyInfo.priceChange.includes('-')\">\r\n                <FallOutlined />{{ companyInfo.priceChange }}\r\n              </div>\r\n              <div v-else><RiseOutlined />{{ companyInfo.priceChange }}</div>\r\n            </div>\r\n          </a-col>\r\n        </a-col>\r\n      </a-row>\r\n      <div :style=\"{ marginTop: '10px', marginBottom: '10px' }\">\r\n        <StockChart :symbol=\"symbol\" @currentPrice=\"getPrice\" />\r\n      </div>\r\n      <a-row justify=\"space-around\">\r\n        <a-col :span=\"10\">\r\n          <a-button\r\n            class=\"buy-button\"\r\n            type=\"primary\"\r\n            @click=\"showModal('buy')\"\r\n            block\r\n          >\r\n            Buy\r\n          </a-button>\r\n        </a-col>\r\n        <a-col :span=\"10\">\r\n          <a-button\r\n            class=\"sell-button\"\r\n            type=\"primary\"\r\n            danger\r\n            @click=\"showModal('sell')\"\r\n            block\r\n            :disabled=\"!hasStock\"\r\n          >\r\n            Sell\r\n          </a-button>\r\n        </a-col>\r\n      </a-row>\r\n    </a-col>\r\n    <a-modal\r\n      v-model:open=\"isModalVisible\"\r\n      :title=\"modalTitle\"\r\n      ok-text=\"Confirm\"\r\n      cancel-text=\"Cancel\"\r\n      @ok=\"handleModalConfirm\"\r\n    >\r\n      <p>Amount:</p>\r\n      <a-slider\r\n        v-model:value=\"amountToBuy\"\r\n        :tooltip-open=\"true\"\r\n        :tip-formatter=\"formatter\"\r\n        @change=\"sliderChange\"\r\n        :max=\"maxSliderValue\"\r\n        :step=\"currentPrice\"\r\n      />\r\n      <p>Stock:</p>\r\n      <a-input-number\r\n        id=\"inputNumber\"\r\n        v-model:value=\"stockToBuy\"\r\n        :min=\"0\"\r\n        @change=\"inputChange\"\r\n        :max=\"maxInputValue\"\r\n      >\r\n        <template #upIcon>\r\n          <ArrowUpOutlined />\r\n        </template>\r\n        <template #downIcon>\r\n          <ArrowDownOutlined />\r\n        </template>\r\n      </a-input-number>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StockChart from \"@/components/StockChart.vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { ref, computed, watch, onMounted } from \"vue\";\r\nimport { stocksArr } from \"@/store/stockArr\";\r\nimport {\r\n  FallOutlined,\r\n  RiseOutlined,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons-vue\";\r\nimport { useStore } from \"@/store/data-context\";\r\n\r\nexport default {\r\n  components: {\r\n    StockChart,\r\n    FallOutlined,\r\n    RiseOutlined,\r\n    ArrowUpOutlined,\r\n    ArrowDownOutlined,\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const currentPrice = ref(null);\r\n    const symbol = ref(route.params.symbol);\r\n    const isModalVisible = ref(false);\r\n    const modalTitle = ref(\"\");\r\n    const stockToBuy = ref(0);\r\n    const amountToBuy = ref(0);\r\n    const selectedOption = ref(\"\");\r\n    const companyInfo = stocksArr.find(\r\n      (stock) => stock.symbol === symbol.value\r\n    );\r\n    const priceChangeClass = companyInfo.priceChange.includes(\"-\")\r\n      ? \"negative-price\"\r\n      : \"positive-price\";\r\n\r\n    const showModal = (action) => {\r\n      selectedOption.value = action === \"buy\" ? \"buy\" : \"sell\";\r\n      isModalVisible.value = true;\r\n      modalTitle.value = (action === \"buy\" ? \"Buy\" : \"Sell\").concat(\r\n        \" \",\r\n        symbol.value,\r\n        \" Stock\"\r\n      );\r\n    };\r\n    const handleModalConfirm = () => {\r\n      isModalVisible.value = false;\r\n\r\n      const newStock = {\r\n        symbol: symbol.value,\r\n        amount: stockToBuy.value,\r\n        eachPrice: currentPrice.value,\r\n        type: selectedOption.value,\r\n        companyName: companyInfo.CcmpanyName,\r\n        logoUrl: companyInfo.logoUrl,\r\n      };\r\n      store.addStock(newStock);\r\n\r\n      // Navigate to the \"Investment\" page\r\n      router.push({ name: \"Investment\" });\r\n    };\r\n    const formatter = () => {\r\n      return `$${amountToBuy.value}`;\r\n    };\r\n\r\n    const inputChange = (value) => {\r\n      stockToBuy.value = Number(value).toFixed(0);\r\n      let currentAmount = value * currentPrice.value;\r\n      amountToBuy.value = currentAmount;\r\n    };\r\n    const sliderChange = (value) => {\r\n      let currentStock = value / currentPrice.value;\r\n      stockToBuy.value = currentStock.toFixed(0);\r\n    };\r\n    const maxSliderValue = computed(() => {\r\n      let price = currentPrice.value;\r\n      // Calculate the maximum slider value based on balance and currentPriceOfStock\r\n      return (\r\n        Math.floor(Number(store.getBalance) / Number(currentPrice.value)) *\r\n        Number(price)\r\n      );\r\n    });\r\n\r\n    const maxInputValue = computed(() => {\r\n      return Math.floor(Number(store.getBalance) / Number(currentPrice.value));\r\n    });\r\n\r\n    // form child (emit)\r\n    const getPrice = (price) => {\r\n      currentPrice.value = price;\r\n    };\r\n\r\n    const hasStock = computed(() => {\r\n      return store.hasStock(symbol.value);\r\n    });\r\n\r\n    watch(store.stocks, () => {\r\n      const boughtStocks = [...store.stocks].filter((stock) => {\r\n        return stock.symbol === symbol.value && stock.Type === \"buy\";\r\n      });\r\n      const soldStocks = [...store.stocks].filter((stock) => {\r\n        return stock.symbol === symbol.value && stock.Type === \"sell\";\r\n      });\r\n      let totalBoughtStocks = 0;\r\n      if (boughtStocks) {\r\n        totalBoughtStocks = boughtStocks.reduce(\r\n          (acc, cur) => acc + Number(cur.amount),\r\n          0\r\n        );\r\n      }\r\n      let totalSoldStocks = 0;\r\n      if (soldStocks) {\r\n        totalSoldStocks = soldStocks.reduce(\r\n          (acc, cur) => acc + Number(cur.amount),\r\n          0\r\n        );\r\n      }\r\n\r\n      return Number(totalBoughtStocks - totalSoldStocks).toFixed(0);\r\n    });\r\n\r\n    return {\r\n      store,\r\n      symbol,\r\n      companyInfo,\r\n      priceChangeClass,\r\n      isModalVisible,\r\n      modalTitle,\r\n      showModal,\r\n      handleModalConfirm,\r\n      amountToBuy,\r\n      formatter,\r\n      stockToBuy,\r\n      getPrice,\r\n      maxSliderValue,\r\n      maxInputValue,\r\n      inputChange,\r\n      sliderChange,\r\n      currentPrice,\r\n      hasStock,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.stock-detail {\r\n  max-height: 75vh;\r\n  overflow: auto;\r\n}\r\n\r\n.logo {\r\n  height: 50px;\r\n  width: 50px;\r\n  max-width: 100px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  margin-right: 20px;\r\n}\r\n\r\n.positive-price {\r\n  color: green;\r\n}\r\n\r\n.negative-price {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}