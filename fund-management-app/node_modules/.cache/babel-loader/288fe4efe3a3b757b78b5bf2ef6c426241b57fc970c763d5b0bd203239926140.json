{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25012f7b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Stock List\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"table-operations\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_a_button, {\n    onClick: $options.setAgeSort\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Sort age\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n    onClick: $options.clearFilters\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Clear filters\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n    onClick: $options.clearAll\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Clear filters and sorters\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_a_table, {\n    columns: $options.columns,\n    \"data-source\": $data.stocks,\n    onChange: $options.handleChange\n  }, null, 8 /* PROPS */, [\"columns\", \"data-source\", \"onChange\"])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_a_button","onClick","$options","setAgeSort","clearFilters","clearAll","_component_a_table","columns","$data","stocks","onChange","handleChange"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Stock List</h1>\r\n    <div>\r\n      <div class=\"table-operations\">\r\n        <a-button @click=\"setAgeSort\">Sort age</a-button>\r\n        <a-button @click=\"clearFilters\">Clear filters</a-button>\r\n        <a-button @click=\"clearAll\">Clear filters and sorters</a-button>\r\n      </div>\r\n      <a-table\r\n        :columns=\"columns\"\r\n        :data-source=\"stocks\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { apiService } from \"@/services/fundAPI\";\r\nimport { AButton, ATable } from \"ant-design-vue\";\r\n\r\nexport default {\r\n  components: {\r\n    AButton,\r\n    ATable,\r\n  },\r\n  data() {\r\n    return {\r\n      stocks: [],\r\n      filteredInfo: {},\r\n      sortedInfo: {},\r\n    };\r\n  },\r\n  computed: {\r\n    columns() {\r\n      // Your columns definition here\r\n      return [\r\n        {\r\n          title: \"Symbol\",\r\n          dataIndex: \"symbol\",\r\n          key: \"symbol\",\r\n          filters: this.getFilterOptions(\"symbol\"),\r\n          filteredValue: this.filteredInfo.symbol || null,\r\n          onFilter: (value, record) => record.symbol.includes(value),\r\n          sorter: (a, b) => a.symbol.localeCompare(b.symbol),\r\n          sortOrder:\r\n            this.sortedInfo.columnKey === \"symbol\" && this.sortedInfo.order,\r\n          ellipsis: true,\r\n        },\r\n        {\r\n          title: \"Name\",\r\n          dataIndex: \"name\",\r\n          key: \"name\",\r\n          filters: this.getFilterOptions(\"name\"),\r\n          filteredValue: this.filteredInfo.name || null,\r\n          onFilter: (value, record) => record.name.includes(value),\r\n          sorter: (a, b) => a.name.localeCompare(b.name),\r\n          sortOrder:\r\n            this.sortedInfo.columnKey === \"name\" && this.sortedInfo.order,\r\n          ellipsis: true,\r\n        },\r\n        {\r\n          title: \"Type\",\r\n          dataIndex: \"type\",\r\n          key: \"type\",\r\n          filters: this.getFilterOptions(\"type\"),\r\n          filteredValue: this.filteredInfo.type || null,\r\n          onFilter: (value, record) => record.type.includes(value),\r\n          sorter: (a, b) => a.type.localeCompare(b.type),\r\n          sortOrder:\r\n            this.sortedInfo.columnKey === \"type\" && this.sortedInfo.order,\r\n          ellipsis: true,\r\n        },\r\n      ];\r\n    },\r\n    filteredData() {\r\n      return this.stocks.filter((item) => {\r\n        return Object.keys(this.filteredInfo).every((key) => {\r\n          if (!this.filteredInfo[key] || this.filteredInfo[key].length === 0) {\r\n            return true;\r\n          }\r\n          const filters = this.filteredInfo[key];\r\n          return filters.includes(item[key]);\r\n        });\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    fetchStocks() {\r\n      apiService\r\n        .fetchStockList()\r\n        .then((response) => {\r\n          this.stocks = response.data;\r\n          console.log(response);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching stocks:\", error);\r\n        });\r\n    },\r\n    getFilterOptions(key) {\r\n      return this.stocks\r\n        .map((item) => item[key])\r\n        .filter((value, index, self) => self.indexOf(value) === index)\r\n        .map((value) => ({ text: value, value }));\r\n    },\r\n    handleChange(pagination, filters, sorter) {\r\n      this.filteredInfo = filters;\r\n      this.sortedInfo = sorter;\r\n    },\r\n    clearFilters() {\r\n      this.filteredInfo = {};\r\n    },\r\n    clearAll() {\r\n      this.filteredInfo = {};\r\n      this.sortedInfo = {};\r\n    },\r\n    setAgeSort() {\r\n      this.sortedInfo = {\r\n        order: \"descend\",\r\n        columnKey: \"age\",\r\n      };\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchStocks();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-operations {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.table-operations > button {\r\n  margin-right: 8px;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAmB,YAAf,YAAU;;EAEPC,KAAK,EAAC;AAAkB;;;;uBAHjCC,mBAAA,CAcM,cAbJC,UAAmB,EACnBH,mBAAA,CAWM,cAVJA,mBAAA,CAIM,OAJNI,UAIM,GAHJC,YAAA,CAAiDC,mBAAA;IAAtCC,OAAK,EAAEC,QAAA,CAAAC;EAAU;sBAAE,MAAQ,C,iBAAR,UAAQ,E;;kCACtCJ,YAAA,CAAwDC,mBAAA;IAA7CC,OAAK,EAAEC,QAAA,CAAAE;EAAY;sBAAE,MAAa,C,iBAAb,eAAa,E;;kCAC7CL,YAAA,CAAgEC,mBAAA;IAArDC,OAAK,EAAEC,QAAA,CAAAG;EAAQ;sBAAE,MAAyB,C,iBAAzB,2BAAyB,E;;oCAEvDN,YAAA,CAIEO,kBAAA;IAHCC,OAAO,EAAEL,QAAA,CAAAK,OAAO;IAChB,aAAW,EAAEC,KAAA,CAAAC,MAAM;IACnBC,QAAM,EAAER,QAAA,CAAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}