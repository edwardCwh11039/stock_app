{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  const _component_Plotly = _resolveComponent(\"Plotly\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_spin, {\n    size: \"large\",\n    tip: \"loading\"\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_Plotly, {\n    data: $setup.chartData,\n    layout: $setup.chartLayout\n  }, null, 8 /* PROPS */, [\"data\", \"layout\"])]))]);\n}","map":{"version":3,"names":["_createElementBlock","$setup","isLoading","_hoisted_1","_createVNode","_component_a_spin","size","tip","_hoisted_2","_component_Plotly","data","chartData","layout","chartLayout"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\components\\StockChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"isLoading\">\r\n      <a-spin size=\"large\" tip=\"loading\"></a-spin>\r\n    </div>\r\n    <div v-else>\r\n      <Plotly :data=\"chartData\" :layout=\"chartLayout\"></Plotly>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted } from \"vue\";\r\n// import axios from \"axios\";\r\nimport {Plotly} from \"vue-plotly\";\r\n\r\nexport default {\r\n  components: { Plotly },\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    // const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n\r\n    // const fetchDailyStockData = async () => {\r\n    //   try {\r\n    //     const apiKey = \"4L899V8QWQXTQP85\";\r\n    //     const response = await axios.get(\r\n    //       `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n    //         symbol.value\r\n    //       }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n    //     );\r\n\r\n    //     if (response.status === 200) {\r\n    //       dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n    //       isError.value = false;\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(\"Error fetching daily stock data:\", error);\r\n    //     isError.value = true;\r\n    //   } finally {\r\n    //     isLoading.value = false;\r\n    //   }\r\n    // };\r\n    const chartLayout = ref({\r\n      title: \"Stock Price\",\r\n      autosize: true,\r\n      margin: { b: 20, t: 0, l: 30, r: 0 },\r\n      modebar: {\r\n        orientation: \"v\",\r\n        remove: [\"lasso\", \"toimage\", \"select\", \"autoscale\"],\r\n      },\r\n    });\r\n    const chartConfig = ref({\r\n      displaylogo: false,\r\n      scrollZoom: true,\r\n      responsive: true,\r\n    });\r\n    onMounted(() => {\r\n      //   fetchDailyStockData();\r\n      isLoading.value = false;\r\n    });\r\n\r\n    return {\r\n      chartData: [\r\n        {\r\n          x: [1, 2, 3, 4],\r\n          y: [10, 15, 13, 17],\r\n          type: \"scatter\",\r\n        },\r\n      ],\r\n      chartLayout,\r\n      chartConfig,\r\n      isLoading,\r\n      symbol,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;;uBACEA,mBAAA,CAOM,cANOC,MAAA,CAAAC,SAAS,I,cAApBF,mBAAA,CAEM,OAAAG,UAAA,GADJC,YAAA,CAA4CC,iBAAA;IAApCC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;yBAE3BP,mBAAA,CAEM,OAAAQ,UAAA,GADJJ,YAAA,CAAyDK,iBAAA;IAAhDC,IAAI,EAAET,MAAA,CAAAU,SAAS;IAAGC,MAAM,EAAEX,MAAA,CAAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}