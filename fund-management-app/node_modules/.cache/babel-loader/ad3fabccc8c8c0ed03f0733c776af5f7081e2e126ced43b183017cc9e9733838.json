{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { apiService } from \"@/services/fundAPI\";\nimport { AButton, ATable } from \"ant-design-vue\";\nimport { computed, ref, h } from \"vue\";\nimport { stocksArr } from \"@/store/stockArr\";\nimport { FallOutlined, RiseOutlined } from \"@ant-design/icons-vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  components: {\n    AButton,\n    ATable\n  },\n  setup() {\n    const sortedInfo = ref();\n    const router = useRouter();\n    const columns = computed(() => {\n      const sorted = sortedInfo.value || {};\n      return [{\n        title: \"Stock\",\n        key: \"companyNameSymbol\",\n        customRender: cell => {\n          const isSamllDevice = window.innerWidth <= 576;\n          const logoNode = h(\"img\", {\n            src: cell.record.LogoUrl,\n            alt: cell.record.CompanyName,\n            style: {\n              width: \"30px\",\n              height: \"30px\",\n              marginRight: \"10px\"\n            }\n          });\n          const symbolNode = h(\"div\", null, cell.record.Symbol);\n          const companyNameNode = h(\"div\", {\n            style: {\n              fontWeight: \"bold\",\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              textOverflow: \"ellipsis\",\n              width: \"150px\"\n            }\n          }, cell.record.CompanyName);\n          return isSamllDevice ? h(\"div\", {\n            // onClick: () =>\n            //   router.push({\n            //     name: \"StockDetail\",\n            //     params: { symbol: cell.record.Symbol },\n            //   }),\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              maxWidth: \"200px\",\n              marginRight: \"0\"\n            }\n          }, [logoNode, symbolNode]) : h(\"div\", {\n            onClick: router.push({\n              name: \"StockDetail\",\n              params: {\n                symbol: cell.record.Symbol\n              }\n            }),\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              maxWidth: \"200px\",\n              marginRight: \"0\"\n            }\n          }, [logoNode, h(\"div\", null, [companyNameNode, symbolNode])]);\n        },\n        responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"]\n      }, {\n        title: \"Revenue\",\n        dataIndex: \"Revenue\",\n        key: \"Revenue\",\n        customRender: ({\n          text\n        }) => {\n          return h(\"span\", {\n            fontWeight: \"bold\"\n          }, `$  ${text}`);\n        },\n        responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\"]\n      }, {\n        title: \"Market Cap\",\n        dataIndex: \"MarketCap\",\n        key: \"MarketCap\",\n        customRender: ({\n          text\n        }) => {\n          return h(\"span\", {\n            fontWeight: \"bold\"\n          }, `$  ${text}`);\n        },\n        responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\"]\n      }, {\n        title: \"Price Change\",\n        dataIndex: \"PriceChange\",\n        key: \"PriceChange\",\n        sorter: (a, b) => {\n          const aValue = parseFloat(a.PriceChange.replace(\"%\", \"\"));\n          const bValue = parseFloat(b.PriceChange.replace(\"%\", \"\"));\n          return aValue - bValue;\n        },\n        sortOrder: sorted.columnKey === \"PriceChange\" && sorted.order,\n        customRender: ({\n          text,\n          record\n        }) => {\n          const color = record.PriceChange.includes(\"-\") ? \"red\" : \"green\";\n          return record.PriceChange.includes(\"-\") ? [h(FallOutlined, {\n            style: {\n              color\n            }\n          }), h(\"span\", {\n            style: {\n              color,\n              marginLeft: \"10px\",\n              fontWeight: \"bold\"\n            }\n          }, text)] : [h(RiseOutlined, {\n            style: {\n              color\n            }\n          }), h(\"span\", {\n            style: {\n              color,\n              marginLeft: \"5px\",\n              fontWeight: \"bold\"\n            }\n          }, text)];\n        },\n        responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"]\n      }, {\n        title: \"Price\",\n        dataIndex: \"Price\",\n        key: \"Price\",\n        sorter: (a, b) => a.Price - b.Price,\n        sortOrder: sorted.columnKey === \"Price\" && sorted.order,\n        customRender: ({\n          text\n        }) => {\n          return h(\"span\", {\n            style: {\n              fontWeight: \"bold\",\n              fontFamily: \"Montserrat, sans-serif\"\n            }\n          }, `$ ${text}`);\n        },\n        responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"]\n      }];\n    });\n    const isSorted = computed(() => {\n      return sortedInfo.value && (sortedInfo.value.columnKey || sortedInfo.value.order);\n    });\n    const handleChange = (pagination, filters, sorter) => {\n      sortedInfo.value = sorter;\n    };\n    const clearAll = () => {\n      sortedInfo.value = null;\n    };\n    return {\n      stocks: stocksArr,\n      columns,\n      handleChange,\n      clearAll,\n      isSorted\n    };\n  }\n};","map":{"version":3,"names":["AButton","ATable","computed","ref","h","stocksArr","FallOutlined","RiseOutlined","useRouter","components","setup","sortedInfo","router","columns","sorted","value","title","key","customRender","cell","isSamllDevice","window","innerWidth","logoNode","src","record","LogoUrl","alt","CompanyName","style","width","height","marginRight","symbolNode","Symbol","companyNameNode","fontWeight","overflow","whiteSpace","textOverflow","display","alignItems","maxWidth","onClick","push","name","params","symbol","responsive","dataIndex","text","sorter","a","b","aValue","parseFloat","PriceChange","replace","bValue","sortOrder","columnKey","order","color","includes","marginLeft","Price","fontFamily","isSorted","handleChange","pagination","filters","clearAll","stocks"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"table-operations\">\r\n        <h1>Stock List</h1>\r\n        <a-button v-show=\"isSorted\" @click=\"clearAll\">Clear sorters</a-button>\r\n      </div>\r\n      <div class=\"table-container\">\r\n        <a-table\r\n          :columns=\"columns\"\r\n          :data-source=\"stocks\"\r\n          @change=\"handleChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { apiService } from \"@/services/fundAPI\";\r\nimport { AButton, ATable } from \"ant-design-vue\";\r\nimport { computed, ref, h } from \"vue\";\r\nimport { stocksArr } from \"@/store/stockArr\";\r\nimport { FallOutlined, RiseOutlined } from \"@ant-design/icons-vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  components: {\r\n    AButton,\r\n    ATable,\r\n  },\r\n  setup() {\r\n    const sortedInfo = ref();\r\n    const router = useRouter();\r\n\r\n    const columns = computed(() => {\r\n      const sorted = sortedInfo.value || {};\r\n      return [\r\n        {\r\n          title: \"Stock\",\r\n          key: \"companyNameSymbol\",\r\n          customRender: (cell) => {\r\n            const isSamllDevice = window.innerWidth <= 576;\r\n\r\n            const logoNode = h(\"img\", {\r\n              src: cell.record.LogoUrl,\r\n              alt: cell.record.CompanyName,\r\n              style: {\r\n                width: \"30px\",\r\n                height: \"30px\",\r\n                marginRight: \"10px\",\r\n              },\r\n            });\r\n            const symbolNode = h(\"div\", null, cell.record.Symbol);\r\n            const companyNameNode = h(\r\n              \"div\",\r\n              {\r\n                style: {\r\n                  fontWeight: \"bold\",\r\n                  overflow: \"hidden\",\r\n                  whiteSpace: \"nowrap\",\r\n                  textOverflow: \"ellipsis\",\r\n                  width: \"150px\",\r\n                },\r\n              },\r\n              cell.record.CompanyName\r\n            );\r\n\r\n            return isSamllDevice\r\n              ? h(\r\n                  \"div\",\r\n                  {\r\n                    // onClick: () =>\r\n                    //   router.push({\r\n                    //     name: \"StockDetail\",\r\n                    //     params: { symbol: cell.record.Symbol },\r\n                    //   }),\r\n                    style: {\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      maxWidth: \"200px\",\r\n                      marginRight: \"0\",\r\n                    },\r\n                  },\r\n                  [logoNode, symbolNode]\r\n                )\r\n              : h(\r\n                  \"div\",\r\n                  {\r\n                    onClick: router.push({\r\n                      name: \"StockDetail\",\r\n                      params: { symbol: cell.record.Symbol },\r\n                    }),\r\n                    style: {\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      maxWidth: \"200px\",\r\n                      marginRight: \"0\",\r\n                    },\r\n                  },\r\n                  [logoNode, h(\"div\", null, [companyNameNode, symbolNode])]\r\n                );\r\n          },\r\n          responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"],\r\n        },\r\n        {\r\n          title: \"Revenue\",\r\n          dataIndex: \"Revenue\",\r\n          key: \"Revenue\",\r\n          customRender: ({ text }) => {\r\n            return h(\"span\", { fontWeight: \"bold\" }, `$  ${text}`);\r\n          },\r\n          responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\"],\r\n        },\r\n        {\r\n          title: \"Market Cap\",\r\n          dataIndex: \"MarketCap\",\r\n          key: \"MarketCap\",\r\n          customRender: ({ text }) => {\r\n            return h(\"span\", { fontWeight: \"bold\" }, `$  ${text}`);\r\n          },\r\n          responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\"],\r\n        },\r\n        {\r\n          title: \"Price Change\",\r\n          dataIndex: \"PriceChange\",\r\n          key: \"PriceChange\",\r\n          sorter: (a, b) => {\r\n            const aValue = parseFloat(a.PriceChange.replace(\"%\", \"\"));\r\n            const bValue = parseFloat(b.PriceChange.replace(\"%\", \"\"));\r\n            return aValue - bValue;\r\n          },\r\n          sortOrder: sorted.columnKey === \"PriceChange\" && sorted.order,\r\n          customRender: ({ text, record }) => {\r\n            const color = record.PriceChange.includes(\"-\") ? \"red\" : \"green\";\r\n            return record.PriceChange.includes(\"-\")\r\n              ? [\r\n                  h(FallOutlined, { style: { color } }),\r\n                  h(\r\n                    \"span\",\r\n                    {\r\n                      style: { color, marginLeft: \"10px\", fontWeight: \"bold\" },\r\n                    },\r\n                    text\r\n                  ),\r\n                ]\r\n              : [\r\n                  h(RiseOutlined, { style: { color } }),\r\n                  h(\r\n                    \"span\",\r\n                    {\r\n                      style: { color, marginLeft: \"5px\", fontWeight: \"bold\" },\r\n                    },\r\n                    text\r\n                  ),\r\n                ];\r\n          },\r\n          responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"],\r\n        },\r\n        {\r\n          title: \"Price\",\r\n          dataIndex: \"Price\",\r\n          key: \"Price\",\r\n          sorter: (a, b) => a.Price - b.Price,\r\n          sortOrder: sorted.columnKey === \"Price\" && sorted.order,\r\n          customRender: ({ text }) => {\r\n            return h(\r\n              \"span\",\r\n              {\r\n                style: {\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Montserrat, sans-serif\",\r\n                },\r\n              },\r\n              `$ ${text}`\r\n            );\r\n          },\r\n          responsive: [\"xxxl\", \"xxl\", \"xl\", \"lg\", \"md\", \"sm\", \"xs\"],\r\n        },\r\n      ];\r\n    });\r\n\r\n    const isSorted = computed(() => {\r\n      return (\r\n        sortedInfo.value &&\r\n        (sortedInfo.value.columnKey || sortedInfo.value.order)\r\n      );\r\n    });\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n      sortedInfo.value = sorter;\r\n    };\r\n\r\n    const clearAll = () => {\r\n      sortedInfo.value = null;\r\n    };\r\n\r\n    return {\r\n      stocks: stocksArr,\r\n      columns,\r\n      handleChange,\r\n      clearAll,\r\n      isSorted,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-operations {\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.table-container {\r\n  max-height: calc(100vh - 300px); /* Adjust the value as needed */\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}