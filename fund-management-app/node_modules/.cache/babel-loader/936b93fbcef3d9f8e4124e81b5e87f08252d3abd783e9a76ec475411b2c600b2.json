{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"trending-stocks\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Trending Stock\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  const _component_a_col = _resolveComponent(\"a-col\");\n  const _component_a_radio_button = _resolveComponent(\"a-radio-button\");\n  const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n  const _component_a_row = _resolveComponent(\"a-row\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_card = _resolveComponent(\"a-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_a_spin, {\n    size: \"large\"\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_a_card, null, {\n    default: _withCtx(() => [_createVNode(_component_a_row, {\n      justify: \"space-between\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_col, null, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_col, null, {\n        default: _withCtx(() => [_createVNode(_component_a_radio_group, {\n          value: $setup.selectedType,\n          \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.selectedType = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_radio_button, {\n            value: \"all\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"All\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_radio_button, {\n            value: \"winners\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Winners\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_radio_button, {\n            value: \"losers\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Losers\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_a_radio_button, {\n            value: \"popular\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Popular\")]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_a_table, {\n      \"data-source\": $setup.filteredData,\n      showHeader: false,\n      columns: $setup.columns\n    }, null, 8 /* PROPS */, [\"data-source\", \"columns\"])]),\n    _: 1 /* STABLE */\n  })]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$setup","loading","_hoisted_2","_createVNode","_component_a_spin","size","_hoisted_3","_component_a_card","_component_a_row","justify","_component_a_col","_hoisted_4","_component_a_radio_group","value","selectedType","$event","_component_a_radio_button","_component_a_table","filteredData","showHeader","columns"],"sources":["C:\\Users\\Edwaed\\Desktop\\stock_app\\fund-management-app\\src\\components\\TrendingStock.vue"],"sourcesContent":["<template>\r\n  <div class=\"trending-stocks\">\r\n    <div v-if=\"loading\" class=\"loading\"><a-spin size=\"large\" /></div>\r\n    <div v-else>\r\n      <a-card>\r\n        <a-row justify=\"space-between\">\r\n          <a-col><h2>Trending Stock</h2></a-col>\r\n          <a-col>\r\n            <a-radio-group v-model:value=\"selectedType\">\r\n              <a-radio-button value=\"all\">All</a-radio-button>\r\n              <a-radio-button value=\"winners\">Winners</a-radio-button>\r\n              <a-radio-button value=\"losers\">Losers</a-radio-button>\r\n              <a-radio-button value=\"popular\">Popular</a-radio-button>\r\n            </a-radio-group>\r\n          </a-col>\r\n        </a-row>\r\n        <a-table\r\n          :data-source=\"filteredData\"\r\n          :showHeader=\"false\"\r\n          :columns=\"columns\"\r\n        />\r\n      </a-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { trendingDataExample } from \"@/store/trendingDataExample\";\r\nimport { computed, ref, watch, h } from \"vue\";\r\nimport { FallOutlined, RiseOutlined } from \"@ant-design/icons-vue\";\r\nimport { alphaApi } from \"@/services/alphaAPI\";\r\n\r\nexport default {\r\n  setup() {\r\n    const winners = ref({});\r\n    const losers = ref({});\r\n    const popular = ref({});\r\n    const columns = ref({});\r\n    const selectedType = ref(\"all\");\r\n    const filteredData = ref([]);\r\n    const loading = ref(true);\r\n    const fetchData = () => {\r\n      loading.value = true;\r\n      console.log(\"test\");\r\n      alphaApi.topGainersLosers().then((res) => {\r\n        console.log(res);\r\n        winners.value = res.top_gainers;\r\n        losers.value = res.top_losers;\r\n        popular.value = res.most_actively_traded;\r\n        loading.value = false;\r\n      });\r\n    };\r\n    fetchData();\r\n\r\n    const updateFilteredData = () => {\r\n      if (selectedType.value === \"winners\") {\r\n        return winners.value;\r\n      } else if (selectedType.value === \"losers\") {\r\n        return losers.value;\r\n      } else if (selectedType.value === \"popular\") {\r\n        return popular.value;\r\n      } else {\r\n        console.log(winners);\r\n        // If selectedType is \"all\", combine all data\r\n        return [...winners.value, ...losers.value, ...popular.value];\r\n      }\r\n    };\r\n    filteredData.value = updateFilteredData();\r\n\r\n    watch(selectedType, () => {\r\n      filteredData.value = updateFilteredData(); // Force reactivity\r\n    });\r\n\r\n    columns.value = computed(() => {\r\n      return [\r\n        {\r\n          title: \"Stock\",\r\n          dataIndex: \"ticker\",\r\n          key: \"ticker\",\r\n        },\r\n        {\r\n          title: \"Price Change\",\r\n          dataIndex: \"change_percentage\",\r\n          key: \"change_percentage\",\r\n          customRender: ({ text, record }) => {\r\n            const color = record.change_percentage.includes(\"-\")\r\n              ? \"red\"\r\n              : \"green\";\r\n            return record.change_percentage.includes(\"-\")\r\n              ? [\r\n                  h(FallOutlined, { style: { color } }),\r\n                  h(\r\n                    \"span\",\r\n                    {\r\n                      style: { color, marginLeft: \"10px\", fontWeight: \"bold\" },\r\n                    },\r\n                    text\r\n                  ),\r\n                ]\r\n              : [\r\n                  h(RiseOutlined, { style: { color } }),\r\n                  h(\r\n                    \"span\",\r\n                    {\r\n                      style: { color, marginLeft: \"5px\", fontWeight: \"bold\" },\r\n                    },\r\n                    text\r\n                  ),\r\n                ];\r\n          },\r\n        },\r\n        {\r\n          title: \"Price\",\r\n          dataIndex: \"price\",\r\n          key: \"price\",\r\n          customRender: ({ text }) => {\r\n            return h(\r\n              \"span\",\r\n              {\r\n                style: {\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Montserrat, sans-serif\",\r\n                },\r\n              },\r\n              `$ ${text}`\r\n            );\r\n          },\r\n        },\r\n      ];\r\n    });\r\n    return {\r\n      selectedType,\r\n      filteredData,\r\n      columns,\r\n      loading,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;EACNA,KAAK,EAAC;;;;;gCAIbC,mBAAA,CAAuB,YAAnB,gBAAc;;;;;;;;;;uBALjCC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBOC,MAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAAiE,OAAjEI,UAAiE,GAA7BC,YAAA,CAAuBC,iBAAA;IAAfC,IAAI,EAAC;EAAO,G,oBACxDP,mBAAA,CAmBM,OAAAQ,UAAA,GAlBJH,YAAA,CAiBSI,iBAAA;sBAhBP,MAUQ,CAVRJ,YAAA,CAUQK,gBAAA;MAVDC,OAAO,EAAC;IAAe;wBAC5B,MAAsC,CAAtCN,YAAA,CAAsCO,gBAAA;0BAA/B,MAAuB,CAAvBC,UAAuB,C;;UAC9BR,YAAA,CAOQO,gBAAA;0BANN,MAKgB,CALhBP,YAAA,CAKgBS,wBAAA;UALOC,KAAK,EAAEb,MAAA,CAAAc,YAAY;gEAAZd,MAAA,CAAAc,YAAY,GAAAC,MAAA;;4BACxC,MAAgD,CAAhDZ,YAAA,CAAgDa,yBAAA;YAAhCH,KAAK,EAAC;UAAK;8BAAC,MAAG,C,iBAAH,KAAG,E;;cAC/BV,YAAA,CAAwDa,yBAAA;YAAxCH,KAAK,EAAC;UAAS;8BAAC,MAAO,C,iBAAP,SAAO,E;;cACvCV,YAAA,CAAsDa,yBAAA;YAAtCH,KAAK,EAAC;UAAQ;8BAAC,MAAM,C,iBAAN,QAAM,E;;cACrCV,YAAA,CAAwDa,yBAAA;YAAxCH,KAAK,EAAC;UAAS;8BAAC,MAAO,C,iBAAP,SAAO,E;;;;;;;;;;QAI7CV,YAAA,CAIEc,kBAAA;MAHC,aAAW,EAAEjB,MAAA,CAAAkB,YAAY;MACzBC,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAEpB,MAAA,CAAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}