{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Error fetching data.\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"Stock Detail Page - \" + _toDisplayString($setup.symbol), 1 /* TEXT */), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_spin, {\n    size: \"large\",\n    tip: \"loading\"\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$setup.isError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"canvas\", _hoisted_7, null, 512 /* NEED_PATCH */)]))]))]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_4","ref","_createElementBlock","_toDisplayString","$setup","symbol","isLoading","_hoisted_1","_createVNode","_component_a_spin","size","tip","_hoisted_2","isError","_hoisted_3","_hoisted_5","_hoisted_6","_hoisted_7"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Stock Detail Page - {{ symbol }}</h1>\r\n    <div v-if=\"isLoading\"><a-spin size=\"large\" tip=\"loading\"></a-spin></div>\r\n    <div v-else>\r\n      <div v-if=\"isError\">\r\n        <p>Error fetching data.</p>\r\n      </div>\r\n      <div v-else>\r\n        <canvas ref=\"chartCanvas\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted, watchEffect } from \"vue\";\r\nimport axios from \"axios\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n    const isError = ref(false);\r\n\r\n    const fetchDailyStockData = async () => {\r\n      try {\r\n        const apiKey = \"4L899V8QWQXTQP85\";\r\n        const response = await axios.get(\r\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${\r\n            symbol.value\r\n          }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n          isError.value = false;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching daily stock data:\", error);\r\n        isError.value = true;\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n\r\n    const chartCanvas = ref(null);\r\n    const chartInstance = ref(null);\r\n\r\n    onMounted(() => {\r\n      fetchDailyStockData();\r\n      chartInstance.value = new Chart(chartCanvas.value, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: Object.keys(dailyStockData.value || {}),\r\n          datasets: [\r\n            {\r\n              label: \"Stock Price\",\r\n              data: Object.values(dailyStockData.value || {}).map(\r\n                (entry) => entry[\"1. open\"]\r\n              ),\r\n              borderColor: \"blue\",\r\n              fill: false,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"day\",\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    });\r\n\r\n    watchEffect(() => {\r\n      isLoading.value = true;\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    return {\r\n      chartCanvas,\r\n      isLoading,\r\n      isError,\r\n      symbol,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;;gCAMQA,mBAAA,CAA2B,WAAxB,sBAAoB;oBAAvBC,UAA2B,C;;;;;EAGnBC,GAAG,EAAC;AAAa;;;uBAR/BC,mBAAA,CAWM,cAVJH,mBAAA,CAAyC,YAArC,sBAAoB,GAAAI,gBAAA,CAAGC,MAAA,CAAAC,MAAM,kBACtBD,MAAA,CAAAE,SAAS,I,cAApBJ,mBAAA,CAAwE,OAAAK,UAAA,GAAlDC,YAAA,CAA4CC,iBAAA;IAApCC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;yBAC/CT,mBAAA,CAOM,OAAAU,UAAA,GANOR,MAAA,CAAAS,OAAO,I,cAAlBX,mBAAA,CAEM,OAAAY,UAAA,EAAAC,UAAA,M,cACNb,mBAAA,CAEM,OAAAc,UAAA,GADJjB,mBAAA,CAA4B,UAA5BkB,UAA4B,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}