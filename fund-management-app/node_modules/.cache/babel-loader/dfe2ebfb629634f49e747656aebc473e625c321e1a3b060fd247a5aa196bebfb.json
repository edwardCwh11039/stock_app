{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport md5 from \"md5\";\nimport TwoStepCaptcha from \"@/components/tools/TwoStepCaptcha\";\nimport { mapActions } from \"vuex\";\nimport { timeFix } from \"@/utils/util\";\nimport { getSmsCaptcha, get2step } from \"@/api/login\";\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data() {\n    return {\n      customActiveKey: \"tab1\",\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    };\n  },\n  created() {\n    get2step({}).then(res => {\n      this.requiredTwoStepCaptcha = res.result.stepCode;\n    }).catch(() => {\n      this.requiredTwoStepCaptcha = false;\n    });\n    // this.requiredTwoStepCaptcha = true\n  },\n\n  methods: {\n    ...mapActions([\"Login\", \"Logout\"]),\n    // handler\n    handleUsernameOrEmail(rule, value, callback) {\n      const {\n        state\n      } = this;\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n      if (regex.test(value)) {\n        state.loginType = 0;\n      } else {\n        state.loginType = 1;\n      }\n      callback();\n    },\n    handleTabClick(key) {\n      this.customActiveKey = key;\n      // this.form.resetFields()\n    },\n\n    handleSubmit(e) {\n      e.preventDefault();\n      const {\n        form: {\n          validateFields\n        },\n        state,\n        customActiveKey,\n        Login\n      } = this;\n      state.loginBtn = true;\n      const validateFieldsKey = customActiveKey === \"tab1\" ? [\"username\", \"password\"] : [\"mobile\", \"captcha\"];\n      validateFields(validateFieldsKey, {\n        force: true\n      }, (err, values) => {\n        if (!err) {\n          console.log(\"login form\", values);\n          const loginParams = {\n            ...values\n          };\n          delete loginParams.username;\n          loginParams[!state.loginType ? \"email\" : \"username\"] = values.username;\n          loginParams.password = md5(values.password);\n          Login(loginParams).then(res => this.loginSuccess(res)).catch(err => this.requestFailed(err)).finally(() => {\n            state.loginBtn = false;\n          });\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false;\n          }, 600);\n        }\n      });\n    },\n    getCaptcha(e) {\n      e.preventDefault();\n      const {\n        form: {\n          validateFields\n        },\n        state\n      } = this;\n      validateFields([\"mobile\"], {\n        force: true\n      }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true;\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n          const hide = this.$message.loading(\"验证码发送中..\", 0);\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(res => {\n            setTimeout(hide, 2500);\n            this.$notification[\"success\"]({\n              message: \"提示\",\n              description: \"验证码获取成功，您的验证码为：\" + res.result.captcha,\n              duration: 8\n            });\n          }).catch(err => {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n            this.requestFailed(err);\n          });\n        }\n      });\n    },\n    stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n    stepCaptchaCancel() {\n      this.Logout().then(() => {\n        this.loginBtn = false;\n        this.stepCaptchaVisible = false;\n      });\n    },\n    loginSuccess(res) {\n      console.log(res);\n      // check res.homePage define, set $router.push name res.homePage\n      // Why not enter onComplete\n      /*\r\n      this.$router.push({ name: 'analysis' }, () => {\r\n        console.log('onComplete')\r\n        this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`\r\n        })\r\n      })\r\n      */\n      this.$router.push({\n        path: \"/\"\n      });\n      // 延迟 1 秒显示欢迎信息\n      setTimeout(() => {\n        this.$notification.success({\n          message: \"欢迎\",\n          description: `${timeFix()}，欢迎回来`\n        });\n      }, 1000);\n      this.isLoginError = false;\n    },\n    requestFailed(err) {\n      this.isLoginError = true;\n      this.$notification[\"error\"]({\n        message: \"错误\",\n        description: ((err.response || {}).data || {}).message || \"请求出现错误，请稍后再试\",\n        duration: 4\n      });\n    }\n  }\n};","map":{"version":3,"names":["md5","TwoStepCaptcha","mapActions","timeFix","getSmsCaptcha","get2step","components","data","customActiveKey","loginBtn","loginType","isLoginError","requiredTwoStepCaptcha","stepCaptchaVisible","form","$form","createForm","state","time","smsSendBtn","created","then","res","result","stepCode","catch","methods","handleUsernameOrEmail","rule","value","callback","regex","test","handleTabClick","key","handleSubmit","e","preventDefault","validateFields","Login","validateFieldsKey","force","err","values","console","log","loginParams","username","password","loginSuccess","requestFailed","finally","setTimeout","getCaptcha","interval","window","setInterval","clearInterval","hide","$message","loading","mobile","$notification","message","description","captcha","duration","stepCaptchaSuccess","stepCaptchaCancel","Logout","$router","push","path","success","response"],"sources":["C:\\Users\\Edwaed\\Desktop\\stock_app\\fund-management-app\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form\r\n      id=\"formLogin\"\r\n      class=\"user-layout-login\"\r\n      ref=\"formLogin\"\r\n      :form=\"form\"\r\n      @submit=\"handleSubmit\"\r\n    >\r\n      <a-tabs\r\n        :activeKey=\"customActiveKey\"\r\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\r\n        @change=\"handleTabClick\"\r\n      >\r\n        <a-tab-pane key=\"tab1\" :tab=\"$t('user.login.tab-login-credentials')\">\r\n          <a-alert\r\n            v-if=\"isLoginError\"\r\n            type=\"error\"\r\n            showIcon\r\n            style=\"margin-bottom: 24px\"\r\n            :message=\"$t('user.login.message-invalid-credentials')\"\r\n          />\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"text\"\r\n              :placeholder=\"$t('user.login.username.placeholder')\"\r\n              v-decorator=\"[\r\n                'username',\r\n                {\r\n                  rules: [\r\n                    { required: true, message: $t('user.userName.required') },\r\n                    { validator: handleUsernameOrEmail },\r\n                  ],\r\n                  validateTrigger: 'change',\r\n                },\r\n              ]\"\r\n            >\r\n              <a-icon\r\n                slot=\"prefix\"\r\n                type=\"user\"\r\n                :style=\"{ color: 'rgba(0,0,0,.25)' }\"\r\n              />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-form-item>\r\n            <a-input-password\r\n              size=\"large\"\r\n              :placeholder=\"$t('user.login.password.placeholder')\"\r\n              v-decorator=\"[\r\n                'password',\r\n                {\r\n                  rules: [\r\n                    { required: true, message: $t('user.password.required') },\r\n                  ],\r\n                  validateTrigger: 'blur',\r\n                },\r\n              ]\"\r\n            >\r\n              <a-icon\r\n                slot=\"prefix\"\r\n                type=\"lock\"\r\n                :style=\"{ color: 'rgba(0,0,0,.25)' }\"\r\n              />\r\n            </a-input-password>\r\n          </a-form-item>\r\n        </a-tab-pane>\r\n        <a-tab-pane key=\"tab2\" :tab=\"$t('user.login.tab-login-mobile')\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"text\"\r\n              :placeholder=\"$t('user.login.mobile.placeholder')\"\r\n              v-decorator=\"[\r\n                'mobile',\r\n                {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: /^1[34578]\\d{9}$/,\r\n                      message: $t('user.login.mobile.placeholder'),\r\n                    },\r\n                  ],\r\n                  validateTrigger: 'change',\r\n                },\r\n              ]\"\r\n            >\r\n              <a-icon\r\n                slot=\"prefix\"\r\n                type=\"mobile\"\r\n                :style=\"{ color: 'rgba(0,0,0,.25)' }\"\r\n              />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"16\">\r\n            <a-col class=\"gutter-row\" :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  :placeholder=\"\r\n                    $t('user.login.mobile.verification-code.placeholder')\r\n                  \"\r\n                  v-decorator=\"[\r\n                    'captcha',\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: $t('user.verification-code.required'),\r\n                        },\r\n                      ],\r\n                      validateTrigger: 'blur',\r\n                    },\r\n                  ]\"\r\n                >\r\n                  <a-icon\r\n                    slot=\"prefix\"\r\n                    type=\"mail\"\r\n                    :style=\"{ color: 'rgba(0,0,0,.25)' }\"\r\n                  />\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col class=\"gutter-row\" :span=\"8\">\r\n              <a-button\r\n                class=\"getCaptcha\"\r\n                tabindex=\"-1\"\r\n                :disabled=\"state.smsSendBtn\"\r\n                @click.stop.prevent=\"getCaptcha\"\r\n                v-text=\"\r\n                  (!state.smsSendBtn &&\r\n                    $t('user.register.get-verification-code')) ||\r\n                  state.time + ' s'\r\n                \"\r\n              ></a-button>\r\n            </a-col>\r\n          </a-row>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n      <a-form-item>\r\n        <a-checkbox\r\n          v-decorator=\"['rememberMe', { valuePropName: 'checked' }]\"\r\n          >{{ $t(\"user.login.remember-me\") }}</a-checkbox\r\n        >\r\n        <router-link\r\n          :to=\"{ name: 'recover', params: { user: 'aaa' } }\"\r\n          class=\"forge-password\"\r\n          style=\"float: right\"\r\n          >{{ $t(\"user.login.forgot-password\") }}</router-link\r\n        >\r\n      </a-form-item>\r\n\r\n      <a-form-item style=\"margin-top: 24px\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"state.loginBtn\"\r\n          :disabled=\"state.loginBtn\"\r\n          >{{ $t(\"user.login.login\") }}</a-button\r\n        >\r\n      </a-form-item>\r\n\r\n      <div class=\"user-login-other\">\r\n        <span>{{ $t(\"user.login.sign-in-with\") }}</span>\r\n        <a>\r\n          <a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon>\r\n        </a>\r\n        <a>\r\n          <a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon>\r\n        </a>\r\n        <a>\r\n          <a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon>\r\n        </a>\r\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">{{\r\n          $t(\"user.login.signup\")\r\n        }}</router-link>\r\n      </div>\r\n    </a-form>\r\n\r\n    <two-step-captcha\r\n      v-if=\"requiredTwoStepCaptcha\"\r\n      :visible=\"stepCaptchaVisible\"\r\n      @success=\"stepCaptchaSuccess\"\r\n      @cancel=\"stepCaptchaCancel\"\r\n    ></two-step-captcha>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport md5 from \"md5\";\r\nimport TwoStepCaptcha from \"@/components/tools/TwoStepCaptcha\";\r\nimport { mapActions } from \"vuex\";\r\nimport { timeFix } from \"@/utils/util\";\r\nimport { getSmsCaptcha, get2step } from \"@/api/login\";\r\n\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha,\r\n  },\r\n  data() {\r\n    return {\r\n      customActiveKey: \"tab1\",\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      isLoginError: false,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      state: {\r\n        time: 60,\r\n        loginBtn: false,\r\n        // login type: 0 email, 1 username, 2 telephone\r\n        loginType: 0,\r\n        smsSendBtn: false,\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    get2step({})\r\n      .then((res) => {\r\n        this.requiredTwoStepCaptcha = res.result.stepCode;\r\n      })\r\n      .catch(() => {\r\n        this.requiredTwoStepCaptcha = false;\r\n      });\r\n    // this.requiredTwoStepCaptcha = true\r\n  },\r\n  methods: {\r\n    ...mapActions([\"Login\", \"Logout\"]),\r\n    // handler\r\n    handleUsernameOrEmail(rule, value, callback) {\r\n      const { state } = this;\r\n      const regex =\r\n        /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\r\n      if (regex.test(value)) {\r\n        state.loginType = 0;\r\n      } else {\r\n        state.loginType = 1;\r\n      }\r\n      callback();\r\n    },\r\n    handleTabClick(key) {\r\n      this.customActiveKey = key;\r\n      // this.form.resetFields()\r\n    },\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const {\r\n        form: { validateFields },\r\n        state,\r\n        customActiveKey,\r\n        Login,\r\n      } = this;\r\n\r\n      state.loginBtn = true;\r\n\r\n      const validateFieldsKey =\r\n        customActiveKey === \"tab1\"\r\n          ? [\"username\", \"password\"]\r\n          : [\"mobile\", \"captcha\"];\r\n\r\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\r\n        if (!err) {\r\n          console.log(\"login form\", values);\r\n          const loginParams = { ...values };\r\n          delete loginParams.username;\r\n          loginParams[!state.loginType ? \"email\" : \"username\"] =\r\n            values.username;\r\n          loginParams.password = md5(values.password);\r\n          Login(loginParams)\r\n            .then((res) => this.loginSuccess(res))\r\n            .catch((err) => this.requestFailed(err))\r\n            .finally(() => {\r\n              state.loginBtn = false;\r\n            });\r\n        } else {\r\n          setTimeout(() => {\r\n            state.loginBtn = false;\r\n          }, 600);\r\n        }\r\n      });\r\n    },\r\n    getCaptcha(e) {\r\n      e.preventDefault();\r\n      const {\r\n        form: { validateFields },\r\n        state,\r\n      } = this;\r\n\r\n      validateFields([\"mobile\"], { force: true }, (err, values) => {\r\n        if (!err) {\r\n          state.smsSendBtn = true;\r\n\r\n          const interval = window.setInterval(() => {\r\n            if (state.time-- <= 0) {\r\n              state.time = 60;\r\n              state.smsSendBtn = false;\r\n              window.clearInterval(interval);\r\n            }\r\n          }, 1000);\r\n\r\n          const hide = this.$message.loading(\"验证码发送中..\", 0);\r\n          getSmsCaptcha({ mobile: values.mobile })\r\n            .then((res) => {\r\n              setTimeout(hide, 2500);\r\n              this.$notification[\"success\"]({\r\n                message: \"提示\",\r\n                description:\r\n                  \"验证码获取成功，您的验证码为：\" + res.result.captcha,\r\n                duration: 8,\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              setTimeout(hide, 1);\r\n              clearInterval(interval);\r\n              state.time = 60;\r\n              state.smsSendBtn = false;\r\n              this.requestFailed(err);\r\n            });\r\n        }\r\n      });\r\n    },\r\n    stepCaptchaSuccess() {\r\n      this.loginSuccess();\r\n    },\r\n    stepCaptchaCancel() {\r\n      this.Logout().then(() => {\r\n        this.loginBtn = false;\r\n        this.stepCaptchaVisible = false;\r\n      });\r\n    },\r\n    loginSuccess(res) {\r\n      console.log(res);\r\n      // check res.homePage define, set $router.push name res.homePage\r\n      // Why not enter onComplete\r\n      /*\r\n      this.$router.push({ name: 'analysis' }, () => {\r\n        console.log('onComplete')\r\n        this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`\r\n        })\r\n      })\r\n      */\r\n      this.$router.push({ path: \"/\" });\r\n      // 延迟 1 秒显示欢迎信息\r\n      setTimeout(() => {\r\n        this.$notification.success({\r\n          message: \"欢迎\",\r\n          description: `${timeFix()}，欢迎回来`,\r\n        });\r\n      }, 1000);\r\n      this.isLoginError = false;\r\n    },\r\n    requestFailed(err) {\r\n      this.isLoginError = true;\r\n      this.$notification[\"error\"]({\r\n        message: \"错误\",\r\n        description:\r\n          ((err.response || {}).data || {}).message ||\r\n          \"请求出现错误，请稍后再试\",\r\n        duration: 4,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}