{"ast":null,"code":"import { computed, ref, watch, h, setTransitionHooks } from \"vue\";\nimport { FallOutlined, RiseOutlined } from \"@ant-design/icons-vue\";\nimport { alphaApi } from \"@/services/alphaAPI\";\nexport default {\n  setup() {\n    const winners = ref([]);\n    const losers = ref([]);\n    const popular = ref([]);\n    const selectedType = ref(\"all\");\n    const filteredData = ref([]);\n    const loading = ref(true);\n    const fetchData = async () => {\n      loading.value = true;\n      await alphaApi.topGainersLosers().then(res => {\n        winners.value = res.top_gainers;\n        losers.value = res.top_losers;\n        popular.value = res.most_actively_traded;\n        loading.value = false;\n      });\n    };\n    fetchData();\n    const updateFilteredData = () => {\n      if (selectedType.value === \"winners\") {\n        return winners.value;\n      } else if (selectedType.value === \"losers\") {\n        return losers.value;\n      } else if (selectedType.value === \"popular\") {\n        return popular.value;\n      } else {\n        return [...winners.value, ...losers.value, ...popular.value];\n      }\n    };\n    watch(selectedType, () => {\n      filteredData.value = updateFilteredData(); // Force reactivity\n    });\n\n    const columns = computed(() => {\n      return [{\n        title: \"Stock\",\n        dataIndex: \"ticker\",\n        key: \"ticker\"\n      }, {\n        title: \"Price Change\",\n        dataIndex: \"change_percentage\",\n        key: \"change_percentage\",\n        customRender: ({\n          text,\n          record\n        }) => {\n          const color = record.change_percentage.includes(\"-\") ? \"red\" : \"green\";\n          return record.change_percentage.includes(\"-\") ? [h(FallOutlined, {\n            style: {\n              color\n            }\n          }), h(\"span\", {\n            style: {\n              color,\n              marginLeft: \"10px\",\n              fontWeight: \"bold\"\n            }\n          }, text)] : [h(RiseOutlined, {\n            style: {\n              color\n            }\n          }), h(\"span\", {\n            style: {\n              color,\n              marginLeft: \"5px\",\n              fontWeight: \"bold\"\n            }\n          }, text)];\n        }\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"price\",\n        customRender: ({\n          text\n        }) => {\n          return h(\"span\", {\n            style: {\n              fontWeight: \"bold\",\n              fontFamily: \"Montserrat, sans-serif\"\n            }\n          }, `$ ${text}`);\n        }\n      }];\n    });\n    filteredData.value = updateFilteredData();\n    return {\n      selectedType,\n      filteredData,\n      columns,\n      loading\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","watch","h","setTransitionHooks","FallOutlined","RiseOutlined","alphaApi","setup","winners","losers","popular","selectedType","filteredData","loading","fetchData","value","topGainersLosers","then","res","top_gainers","top_losers","most_actively_traded","updateFilteredData","columns","title","dataIndex","key","customRender","text","record","color","change_percentage","includes","style","marginLeft","fontWeight","fontFamily"],"sources":["C:\\Users\\Edwaed\\Desktop\\stock_app\\fund-management-app\\src\\components\\TrendingStock.vue"],"sourcesContent":["<template>\r\n  <div class=\"trending-stocks\">\r\n    <a-card>\r\n      <a-row justify=\"space-between\">\r\n        <a-col><h2>Trending Stock</h2></a-col>\r\n        <a-col>\r\n          <a-radio-group v-model:value=\"selectedType\">\r\n            <a-radio-button value=\"all\">All</a-radio-button>\r\n            <a-radio-button value=\"winners\">Winners</a-radio-button>\r\n            <a-radio-button value=\"losers\">Losers</a-radio-button>\r\n            <a-radio-button value=\"popular\">Popular</a-radio-button>\r\n          </a-radio-group>\r\n        </a-col>\r\n      </a-row>\r\n      <div v-if=\"loading\" class=\"loading\"><a-spin size=\"large\" /></div>\r\n      <div v-else class=\"stocks-list-container\">\r\n        <a-table\r\n          :data-source=\"filteredData\"\r\n          :showHeader=\"false\"\r\n          :columns=\"columns\"\r\n        />\r\n      </div>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, ref, watch, h, setTransitionHooks } from \"vue\";\r\nimport { FallOutlined, RiseOutlined } from \"@ant-design/icons-vue\";\r\nimport { alphaApi } from \"@/services/alphaAPI\";\r\n\r\nexport default {\r\n  setup() {\r\n    const winners = ref([]);\r\n    const losers = ref([]);\r\n    const popular = ref([]);\r\n    const selectedType = ref(\"all\");\r\n    const filteredData = ref([]);\r\n    const loading = ref(true);\r\n    const fetchData = async () => {\r\n      loading.value = true;\r\n      await alphaApi.topGainersLosers().then((res) => {\r\n        winners.value = res.top_gainers;\r\n        losers.value = res.top_losers;\r\n        popular.value = res.most_actively_traded;\r\n        loading.value = false;\r\n      });\r\n    };\r\n    fetchData();\r\n\r\n    const updateFilteredData = () => {\r\n      if (selectedType.value === \"winners\") {\r\n        return winners.value;\r\n      } else if (selectedType.value === \"losers\") {\r\n        return losers.value;\r\n      } else if (selectedType.value === \"popular\") {\r\n        return popular.value;\r\n      } else {\r\n        return [...winners.value, ...losers.value, ...popular.value];\r\n      }\r\n    };\r\n\r\n\r\n    watch(selectedType, () => {\r\n      filteredData.value = updateFilteredData(); // Force reactivity\r\n    });\r\n\r\n    const columns = computed(() => {\r\n      return [\r\n        {\r\n          title: \"Stock\",\r\n          dataIndex: \"ticker\",\r\n          key: \"ticker\",\r\n        },\r\n        {\r\n          title: \"Price Change\",\r\n          dataIndex: \"change_percentage\",\r\n          key: \"change_percentage\",\r\n          customRender: ({ text, record }) => {\r\n            const color = record.change_percentage.includes(\"-\")\r\n              ? \"red\"\r\n              : \"green\";\r\n            return record.change_percentage.includes(\"-\")\r\n              ? [\r\n                  h(FallOutlined, { style: { color } }),\r\n                  h(\r\n                    \"span\",\r\n                    {\r\n                      style: { color, marginLeft: \"10px\", fontWeight: \"bold\" },\r\n                    },\r\n                    text\r\n                  ),\r\n                ]\r\n              : [\r\n                  h(RiseOutlined, { style: { color } }),\r\n                  h(\r\n                    \"span\",\r\n                    {\r\n                      style: { color, marginLeft: \"5px\", fontWeight: \"bold\" },\r\n                    },\r\n                    text\r\n                  ),\r\n                ];\r\n          },\r\n        },\r\n        {\r\n          title: \"Price\",\r\n          dataIndex: \"price\",\r\n          key: \"price\",\r\n          customRender: ({ text }) => {\r\n            return h(\r\n              \"span\",\r\n              {\r\n                style: {\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Montserrat, sans-serif\",\r\n                },\r\n              },\r\n              `$ ${text}`\r\n            );\r\n          },\r\n        },\r\n      ];\r\n    });\r\n\r\n    filteredData.value = updateFilteredData();\r\n\r\n    return {\r\n      selectedType,\r\n      filteredData,\r\n      columns,\r\n      loading,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.stocks-list-container {\r\n  max-height: 75vh;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}