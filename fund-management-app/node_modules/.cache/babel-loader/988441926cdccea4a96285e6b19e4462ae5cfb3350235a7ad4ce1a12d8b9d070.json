{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport StockChart from \"@/components/StockChart.vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { ref, computed, watch, onMounted, onBeforeMount } from \"vue\";\nimport { stocksArr } from \"@/store/stockArr\";\nimport { FallOutlined, RiseOutlined, ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons-vue\";\nimport { useStore } from \"@/store/data-context\";\nimport { apiService } from \"@/services/apiService\";\nexport default {\n  components: {\n    StockChart,\n    FallOutlined,\n    RiseOutlined,\n    ArrowUpOutlined,\n    ArrowDownOutlined\n  },\n  data() {\n    return {\n      companyInfo: {},\n      store: useStore(),\n      router: useRouter(),\n      route: useRoute(),\n      symbol: ref(this.route.params.symbol),\n      currentPrice: ref(null),\n      isModalVisible: ref(false),\n      modalTitle: ref(\"\"),\n      stockToBuy: ref(0),\n      stockToSell: ref(0),\n      amount: ref(0),\n      selectedOption: ref(\"\"),\n      priceChangeClass: ref({})\n    };\n  },\n  beforeCreate() {\n    this.fetchCompanyInfo();\n  },\n  methods: {\n    showModal(action) {\n      this.selectedOption.value = action === \"buy\" ? \"buy\" : \"sell\";\n      this.isModalVisible.value = true;\n      this.modalTitle.value = (action === \"buy\" ? \"Buy\" : \"Sell\").concat(\" \", this.symbol.value, \" Stock\");\n    },\n    handleModalConfirm() {\n      this.isModalVisible.value = false;\n      const newStock = {\n        symbol: this.symbol.value,\n        amount: this.stockToBuy.value,\n        eachPrice: this.currentPrice.value,\n        type: this.selectedOption.value,\n        companyName: this.companyInfo.value.CcmpanyName,\n        logoUrl: this.companyInfo.value.logoUrl\n      };\n      this.store.addStock(newStock);\n\n      // Navigate to the \"Investment\" page\n      this.router.push({\n        name: \"Investment\"\n      });\n    },\n    formatter() {\n      return `$${this.amount.value}`;\n    },\n    inputChange(value) {\n      this.stockToBuy.value = Number(value);\n      let currentAmount = value * this.currentPrice.value;\n      this.amount.value = currentAmount;\n    },\n    sliderChange(value) {\n      let currentStock = value / this.currentPrice.value;\n      this.stockToBuy.value = currentStock.toFixed(0);\n    },\n    getPrice(price) {\n      this.currentPrice.value = price;\n    },\n    getBoughtStocks() {\n      const boughtStocks = [...this.store.stocks].filter(stock => {\n        return stock.symbol === this.symbol.value && stock.type === \"buy\";\n      });\n      const soldStocks = [...this.store.stocks].filter(stock => {\n        return stock.symbol === this.symbol.value && stock.type === \"sell\";\n      });\n      let totalBoughtStocks = 0;\n      if (boughtStocks) {\n        totalBoughtStocks = boughtStocks.reduce((acc, cur) => acc + Number(cur.amount), 0);\n      }\n      let totalSoldStocks = 0;\n      if (soldStocks) {\n        totalSoldStocks = soldStocks.reduce((acc, cur) => acc + Number(cur.amount), 0);\n      }\n      return Number(totalBoughtStocks - totalSoldStocks).toFixed(0);\n    },\n    async fetchCompanyInfo() {\n      this.companyInfo.value = await apiService.getStock(this.symbol.value);\n      this.priceChangeClass.value = this.companyInfo.value.priceChange.includes(\"-\") ? {\n        class: \"negative-price\",\n        up: false\n      } : {\n        class: \"positive-price\",\n        up: true\n      };\n    }\n  },\n  computed: {\n    maxSliderValue() {\n      let price = this.currentPrice.value;\n      return this.selectedOption.value === \"buy\" ? Math.floor(Number(this.store.getBalance) / Number(this.currentPrice.value)) * Number(price) : Number(price) * Number(this.stockToSell);\n    },\n    maxInputValue() {\n      return this.selectedOption.value === \"buy\" ? Math.floor(Number(this.store.getBalance) / Number(this.currentPrice.value)) : Number(this.stockToSell);\n    },\n    hasStock() {\n      return this.stockToSell.value > 0;\n    },\n    enoughMoney() {\n      return this.store.getBalance >= Number(this.currentPrice.value);\n    }\n  }\n};","map":{"version":3,"names":["StockChart","useRoute","useRouter","ref","computed","watch","onMounted","onBeforeMount","stocksArr","FallOutlined","RiseOutlined","ArrowUpOutlined","ArrowDownOutlined","useStore","apiService","components","data","companyInfo","store","router","route","symbol","params","currentPrice","isModalVisible","modalTitle","stockToBuy","stockToSell","amount","selectedOption","priceChangeClass","beforeCreate","fetchCompanyInfo","methods","showModal","action","value","concat","handleModalConfirm","newStock","eachPrice","type","companyName","CcmpanyName","logoUrl","addStock","push","name","formatter","inputChange","Number","currentAmount","sliderChange","currentStock","toFixed","getPrice","price","getBoughtStocks","boughtStocks","stocks","filter","stock","soldStocks","totalBoughtStocks","reduce","acc","cur","totalSoldStocks","getStock","priceChange","includes","class","up","maxSliderValue","Math","floor","getBalance","maxInputValue","hasStock","enoughMoney"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"stock-detail\">\r\n    <a-col :span=\"24\">\r\n      <a-row justify=\"space-between\">\r\n        <a-col>\r\n          <a-row>\r\n            <a-col>\r\n              <img :src=\"companyInfo.logoUrl\" alt=\"Company Logo\" class=\"logo\" />\r\n            </a-col>\r\n            <a-col\r\n              ><a-row>\r\n                <h2>{{ companyInfo.companyName }}</h2>\r\n              </a-row>\r\n              <a-row>\r\n                <p>{{ symbol }}</p>\r\n              </a-row>\r\n            </a-col>\r\n          </a-row>\r\n        </a-col>\r\n        <a-col>\r\n          <a-col class=\"price\">\r\n            <span>\r\n              <b>$ {{ currentPrice }}</b>\r\n            </span>\r\n            <div :class=\"priceChangeClass.class\">\r\n              <div v-if=\"!priceChangeClass.up\">\r\n                <FallOutlined />{{ companyInfo.priceChange }}\r\n              </div>\r\n              <div v-else><RiseOutlined />{{ companyInfo.priceChange }}</div>\r\n            </div>\r\n          </a-col>\r\n        </a-col>\r\n      </a-row>\r\n      <div :style=\"{ marginTop: '10px', marginBottom: '10px' }\">\r\n        <StockChart :symbol=\"symbol\" @currentPrice=\"getPrice\" />\r\n      </div>\r\n      <a-row justify=\"space-around\">\r\n        <a-col :span=\"10\">\r\n          <a-button\r\n            class=\"buy-button\"\r\n            type=\"primary\"\r\n            @click=\"showModal('buy')\"\r\n            :disabled=\"!enoughMoney\"\r\n            block\r\n          >\r\n            Buy\r\n          </a-button>\r\n        </a-col>\r\n        <a-col :span=\"10\">\r\n          <a-button\r\n            class=\"sell-button\"\r\n            type=\"primary\"\r\n            danger\r\n            @click=\"showModal('sell')\"\r\n            block\r\n            :disabled=\"getBoughtStocks() < 1\"\r\n          >\r\n            Sell {{ getBoughtStocks() }}\r\n          </a-button>\r\n        </a-col>\r\n      </a-row>\r\n    </a-col>\r\n    <a-modal\r\n      v-model:open=\"isModalVisible\"\r\n      :title=\"modalTitle\"\r\n      ok-text=\"Confirm\"\r\n      cancel-text=\"Cancel\"\r\n      @ok=\"handleModalConfirm\"\r\n    >\r\n      <p>Amount:</p>\r\n      <a-slider\r\n        v-model:value=\"amount\"\r\n        :tooltip-open=\"true\"\r\n        :tip-formatter=\"formatter\"\r\n        @change=\"sliderChange\"\r\n        :max=\"maxSliderValue\"\r\n        :step=\"currentPrice\"\r\n      />\r\n\r\n      <p>Stock:</p>\r\n      <a-input-number\r\n        id=\"inputNumber\"\r\n        v-model:value=\"stockToBuy\"\r\n        :min=\"1\"\r\n        @change=\"inputChange\"\r\n        :max=\"maxInputValue\"\r\n      >\r\n        <template #upIcon>\r\n          <ArrowUpOutlined />\r\n        </template>\r\n        <template #downIcon>\r\n          <ArrowDownOutlined />\r\n        </template>\r\n      </a-input-number>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StockChart from \"@/components/StockChart.vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { ref, computed, watch, onMounted, onBeforeMount } from \"vue\";\r\nimport { stocksArr } from \"@/store/stockArr\";\r\nimport {\r\n  FallOutlined,\r\n  RiseOutlined,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons-vue\";\r\nimport { useStore } from \"@/store/data-context\";\r\nimport { apiService } from \"@/services/apiService\";\r\n\r\nexport default {\r\n  components: {\r\n    StockChart,\r\n    FallOutlined,\r\n    RiseOutlined,\r\n    ArrowUpOutlined,\r\n    ArrowDownOutlined,\r\n  },\r\n  data() {\r\n    return {\r\n      companyInfo: {},\r\n      store: useStore(),\r\n      router: useRouter(),\r\n      route: useRoute(),\r\n      symbol: ref(this.route.params.symbol),\r\n      currentPrice: ref(null),\r\n      isModalVisible: ref(false),\r\n      modalTitle: ref(\"\"),\r\n      stockToBuy: ref(0),\r\n      stockToSell: ref(0),\r\n      amount: ref(0),\r\n      selectedOption: ref(\"\"),\r\n      priceChangeClass: ref({}),\r\n    };\r\n  },\r\n  beforeCreate() {\r\n    this.fetchCompanyInfo();\r\n  },\r\n  methods: {\r\n    showModal(action) {\r\n      this.selectedOption.value = action === \"buy\" ? \"buy\" : \"sell\";\r\n      this.isModalVisible.value = true;\r\n      this.modalTitle.value = (action === \"buy\" ? \"Buy\" : \"Sell\").concat(\r\n        \" \",\r\n        this.symbol.value,\r\n        \" Stock\"\r\n      );\r\n    },\r\n    handleModalConfirm() {\r\n      this.isModalVisible.value = false;\r\n\r\n      const newStock = {\r\n        symbol: this.symbol.value,\r\n        amount: this.stockToBuy.value,\r\n        eachPrice: this.currentPrice.value,\r\n        type: this.selectedOption.value,\r\n        companyName: this.companyInfo.value.CcmpanyName,\r\n        logoUrl: this.companyInfo.value.logoUrl,\r\n      };\r\n      this.store.addStock(newStock);\r\n\r\n      // Navigate to the \"Investment\" page\r\n      this.router.push({ name: \"Investment\" });\r\n    },\r\n    formatter() {\r\n      return `$${this.amount.value}`;\r\n    },\r\n    inputChange(value) {\r\n      this.stockToBuy.value = Number(value);\r\n      let currentAmount = value * this.currentPrice.value;\r\n      this.amount.value = currentAmount;\r\n    },\r\n    sliderChange(value) {\r\n      let currentStock = value / this.currentPrice.value;\r\n      this.stockToBuy.value = currentStock.toFixed(0);\r\n    },\r\n    getPrice(price) {\r\n      this.currentPrice.value = price;\r\n    },\r\n    getBoughtStocks() {\r\n      const boughtStocks = [...this.store.stocks].filter((stock) => {\r\n        return stock.symbol === this.symbol.value && stock.type === \"buy\";\r\n      });\r\n      const soldStocks = [...this.store.stocks].filter((stock) => {\r\n        return stock.symbol === this.symbol.value && stock.type === \"sell\";\r\n      });\r\n      let totalBoughtStocks = 0;\r\n      if (boughtStocks) {\r\n        totalBoughtStocks = boughtStocks.reduce(\r\n          (acc, cur) => acc + Number(cur.amount),\r\n          0\r\n        );\r\n      }\r\n      let totalSoldStocks = 0;\r\n      if (soldStocks) {\r\n        totalSoldStocks = soldStocks.reduce(\r\n          (acc, cur) => acc + Number(cur.amount),\r\n          0\r\n        );\r\n      }\r\n      return Number(totalBoughtStocks - totalSoldStocks).toFixed(0);\r\n    },\r\n    async fetchCompanyInfo() {\r\n      this.companyInfo.value = await apiService.getStock(this.symbol.value);\r\n      this.priceChangeClass.value = this.companyInfo.value.priceChange.includes(\r\n        \"-\"\r\n      )\r\n        ? { class: \"negative-price\", up: false }\r\n        : { class: \"positive-price\", up: true };\r\n    },\r\n  },\r\n  computed: {\r\n    maxSliderValue() {\r\n      let price = this.currentPrice.value;\r\n      return this.selectedOption.value === \"buy\"\r\n        ? Math.floor(\r\n            Number(this.store.getBalance) / Number(this.currentPrice.value)\r\n          ) * Number(price)\r\n        : Number(price) * Number(this.stockToSell);\r\n    },\r\n    maxInputValue() {\r\n      return this.selectedOption.value === \"buy\"\r\n        ? Math.floor(\r\n            Number(this.store.getBalance) / Number(this.currentPrice.value)\r\n          )\r\n        : Number(this.stockToSell);\r\n    },\r\n    hasStock() {\r\n      return this.stockToSell.value > 0;\r\n    },\r\n    enoughMoney() {\r\n      return this.store.getBalance >= Number(this.currentPrice.value);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.stock-detail {\r\n  max-height: 75vh;\r\n  overflow: auto;\r\n}\r\n\r\n.logo {\r\n  height: 50px;\r\n  width: 50px;\r\n  max-width: 100px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  margin-right: 20px;\r\n}\r\n\r\n.positive-price {\r\n  color: green;\r\n}\r\n\r\n.negative-price {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}