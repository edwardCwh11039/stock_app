{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \"Stock Detail Page - \" + _toDisplayString($setup.symbol), 1 /* TEXT */), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_spin, {\n    size: \"large\",\n    tip: \"loading\"\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" Display the fetched data here \"), _createElementVNode(\"pre\", null, _toDisplayString($setup.dailyStockData), 1 /* TEXT */)]))]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","symbol","isLoading","_hoisted_1","_createVNode","_component_a_spin","size","tip","_hoisted_2","_createCommentVNode","dailyStockData"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Stock Detail Page - {{ symbol }}</h1>\r\n    <div v-if=\"isLoading\"><a-spin size=\"large\" tip=\"loading\"></a-spin></div>\r\n    <div v-else>\r\n      <!-- Display the fetched data here -->\r\n      <pre>{{ dailyStockData }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted, watchEffect } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n\r\n    const fetchDailyStockData = async () => {\r\n      try {\r\n        const apiKey = \"4L899V8QWQXTQP85\";\r\n        const response = await axios.get(\r\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n            symbol.value\r\n          }&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching daily stock data:\", error);\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    watchEffect(() => {\r\n      isLoading.value = true;\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    return {\r\n      isLoading,\r\n      symbol,\r\n      dailyStockData, // Make the fetched data available in the template\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;uBACEA,mBAAA,CAOM,cANJC,mBAAA,CAAyC,YAArC,sBAAoB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,MAAM,kBACtBD,MAAA,CAAAE,SAAS,I,cAApBL,mBAAA,CAAwE,OAAAM,UAAA,GAAlDC,YAAA,CAA4CC,iBAAA;IAApCC,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;yBAC/CV,mBAAA,CAGM,OAAAW,UAAA,GAFJC,mBAAA,mCAAsC,EACtCX,mBAAA,CAA+B,aAAAC,gBAAA,CAAvBC,MAAA,CAAAU,cAAc,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}