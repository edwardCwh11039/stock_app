{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { ref, onMounted, watchEffect } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  setup() {\n    const route = useRoute();\n    const symbol = ref(route.params.symbol);\n    const dailyStockData = ref(null);\n    const isLoading = ref(true);\n    const fetchDailyStockData = async () => {\n      try {\n        const apiKey = \"4L899V8QWQXTQP85\";\n        const response = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol.value}&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`);\n        if (response.status === 200) {\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\n        }\n      } catch (error) {\n        console.error(\"Error fetching daily stock data:\", error);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    onMounted(() => {\n      fetchDailyStockData();\n    });\n    watchEffect(() => {\n      isLoading.value = true;\n      fetchDailyStockData();\n    });\n    return {\n      isLoading,\n      symbol,\n      dailyStockData // Make the fetched data available in the template\n    };\n  }\n};","map":{"version":3,"names":["useRoute","ref","onMounted","watchEffect","axios","setup","route","symbol","params","dailyStockData","isLoading","fetchDailyStockData","apiKey","response","get","value","status","data","error","console"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Stock Detail Page - {{ symbol }}</h1>\r\n    <div v-if=\"isLoading\">Loading...</div>\r\n    <div v-else>\r\n      <!-- Display the fetched data here -->\r\n      <pre>{{ dailyStockData }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted, watchEffect } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n\r\n    const fetchDailyStockData = async () => {\r\n      try {\r\n        const apiKey = \"4L899V8QWQXTQP85\";\r\n        const response = await axios.get(\r\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n            symbol.value\r\n          }&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching daily stock data:\", error);\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    watchEffect(() => {\r\n      isLoading.value = true;\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    return {\r\n      isLoading,\r\n      symbol,\r\n      dailyStockData, // Make the fetched data available in the template\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAYA,SAASA,QAAO,QAAS,YAAY;AACrC,SAASC,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AACjD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,MAAK,GAAIN,GAAG,CAACK,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,cAAa,GAAIR,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMS,SAAQ,GAAIT,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMU,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,MAAK,GAAI,kBAAkB;QACjC,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAC7B,uEACCP,MAAM,CAACQ,KACR,WAAUR,MAAM,CAACQ,KAAI,KAAM,KAAI,GAAI,MAAK,GAAIH,MAAO,EACtD,CAAC;QAED,IAAIC,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BP,cAAc,CAACM,KAAI,GAAIF,QAAQ,CAACI,IAAI,CAAC,qBAAqB,CAAC;QAC7D;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,UAAU;QACRR,SAAS,CAACK,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAEDb,SAAS,CAAC,MAAM;MACdS,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC;IAEFR,WAAW,CAAC,MAAM;MAChBO,SAAS,CAACK,KAAI,GAAI,IAAI;MACtBJ,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO;MACLD,SAAS;MACTH,MAAM;MACNE,cAAc,CAAE;IAClB,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}