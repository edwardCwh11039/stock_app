{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25012f7b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Stock List\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"table-container\"\n};\nconst _hoisted_3 = {\n  class: \"table-operations\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_a_button, {\n    onClick: $setup.setPriceSort\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Sort Price\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n    onClick: $setup.clearFilters\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Clear filters\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_a_button, {\n    onClick: $setup.clearAll\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Clear filters and sorters\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_a_table, {\n    columns: $setup.columns,\n    \"data-source\": $setup.stocks,\n    onChange: $setup.handleChange\n  }, null, 8 /* PROPS */, [\"columns\", \"data-source\", \"onChange\"])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_a_button","onClick","$setup","setPriceSort","clearFilters","clearAll","_component_a_table","columns","stocks","onChange","handleChange"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Stock List</h1>\r\n    <div class=\"table-container\">\r\n      <div class=\"table-operations\">\r\n        <a-button @click=\"setPriceSort\">Sort Price</a-button>\r\n        <a-button @click=\"clearFilters\">Clear filters</a-button>\r\n        <a-button @click=\"clearAll\">Clear filters and sorters</a-button>\r\n      </div>\r\n      <a-table\r\n        :columns=\"columns\"\r\n        :data-source=\"stocks\"\r\n        @change=\"handleChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { apiService } from \"@/services/fundAPI\";\r\nimport { AButton, ATable } from \"ant-design-vue\";\r\nimport { computed, ref } from \"vue\";\r\nimport { stocksArr } from \"@/store/stockArr\";\r\n\r\nexport default {\r\n  components: {\r\n    AButton,\r\n    ATable,\r\n  },\r\n  setup() {\r\n    const filteredInfo = ref();\r\n    const sortedInfo = ref();\r\n\r\n    const columns = computed(() => {\r\n      const sorted = sortedInfo.value || {};\r\n      return [\r\n        {\r\n          title: \"Symbol\",\r\n          dataIndex: \"Symbol\",\r\n          key: \"Symbol\",\r\n          sorter: (a, b) => a.Symbol.localeCompare(b.Symbol),\r\n          sortOrder: sorted.columnKey === \"Symbol\" && sorted.order,\r\n          ellipsis: true,\r\n        },\r\n        {\r\n          title: \"Company Name\",\r\n          dataIndex: \"CompanyName\",\r\n          key: \"CompanyName\",\r\n          sorter: (a, b) => a.CompanyName.localeCompare(b.CompanyName),\r\n          sortOrder: sorted.columnKey === \"CompanyName\" && sorted.order,\r\n          ellipsis: true,\r\n        },\r\n        {\r\n          title: \"Price\",\r\n          dataIndex: \"Price\",\r\n          key: \"Price\",\r\n          sorter: (a, b) => a.Price - b.Price,\r\n          sortOrder: sorted.columnKey === \"Price\" && sorted.order,\r\n        },\r\n        {\r\n          title: \"Price Change\",\r\n          dataIndex: \"PriceChange\",\r\n          key: \"PriceChange\",\r\n          sorter: (a, b) => a.PriceChange.localeCompare(b.PriceChange),\r\n          sortOrder: sorted.columnKey === \"PriceChange\" && sorted.order,\r\n          ellipsis: true,\r\n        },\r\n      ];\r\n    });\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n      console.log(\"Various parameters\", pagination, filters, sorter);\r\n      filteredInfo.value = filters;\r\n      sortedInfo.value = sorter;\r\n    };\r\n\r\n    const clearFilters = () => {\r\n      filteredInfo.value = null;\r\n    };\r\n\r\n    const clearAll = () => {\r\n      filteredInfo.value = null;\r\n      sortedInfo.value = null;\r\n    };\r\n\r\n    const setPriceSort = () => {\r\n      sortedInfo.value = {\r\n        order: \"descend\",\r\n        columnKey: \"Price\",\r\n      };\r\n    };\r\n\r\n    return {\r\n      stocks: stocksArr,\r\n      columns,\r\n      handleChange,\r\n      clearFilters,\r\n      clearAll,\r\n      setPriceSort,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-operations {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.table-operations > button {\r\n  margin-right: 8px;\r\n}\r\n.table-container {\r\n  max-height: calc(100vh - 200px); /* Adjust the value as needed */\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAmB,YAAf,YAAU;;EACTC,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAkB;;;;uBAHjCC,mBAAA,CAcM,cAbJC,UAAmB,EACnBH,mBAAA,CAWM,OAXNI,UAWM,GAVJJ,mBAAA,CAIM,OAJNK,UAIM,GAHJC,YAAA,CAAqDC,mBAAA;IAA1CC,OAAK,EAAEC,MAAA,CAAAC;EAAY;sBAAE,MAAU,C,iBAAV,YAAU,E;;kCAC1CJ,YAAA,CAAwDC,mBAAA;IAA7CC,OAAK,EAAEC,MAAA,CAAAE;EAAY;sBAAE,MAAa,C,iBAAb,eAAa,E;;kCAC7CL,YAAA,CAAgEC,mBAAA;IAArDC,OAAK,EAAEC,MAAA,CAAAG;EAAQ;sBAAE,MAAyB,C,iBAAzB,2BAAyB,E;;oCAEvDN,YAAA,CAIEO,kBAAA;IAHCC,OAAO,EAAEL,MAAA,CAAAK,OAAO;IAChB,aAAW,EAAEL,MAAA,CAAAM,MAAM;IACnBC,QAAM,EAAEP,MAAA,CAAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}