{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Line, {\n    id: \"stockLine\",\n    options: $setup.chartOptions,\n    data: $props.stockData\n  }, null, 8 /* PROPS */, [\"options\", \"data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Line","id","options","$setup","chartOptions","data","$props","stockData"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\components\\StockChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Line id=\"stockLine\" :options=\"chartOptions\" :data=\"stockData\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref } from \"vue\";\r\n// import axios from \"axios\";\r\nimport { Line } from \"vue-chartjs\";\r\nimport \"chart.js/auto\";\r\n\r\nexport default {\r\n  props: [\"stockData\"],\r\n  components: { Line },\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    // const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n\r\n    // const fetchDailyStockData = async () => {\r\n    //   try {\r\n    //     const apiKey = \"4L899V8QWQXTQP85\";\r\n    //     const response = await axios.get(\r\n    //       `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n    //         symbol.value\r\n    //       }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n    //     );\r\n\r\n    //     if (response.status === 200) {\r\n    //       dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n    //       isError.value = false;\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(\"Error fetching daily stock data:\", error);\r\n    //     isError.value = true;\r\n    //   } finally {\r\n    //     isLoading.value = false;\r\n    //   }\r\n    // };\r\n    const chartOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n      layout: {\r\n        padding: {\r\n          bottom: 20,\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n        },\r\n      },\r\n    };\r\n\r\n    return {\r\n      chartOptions,\r\n      isLoading,\r\n      symbol,\r\n      Line,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAiEC,eAAA;IAA3DC,EAAE,EAAC,WAAW;IAAEC,OAAO,EAAEC,MAAA,CAAAC,YAAY;IAAGC,IAAI,EAAEC,MAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}