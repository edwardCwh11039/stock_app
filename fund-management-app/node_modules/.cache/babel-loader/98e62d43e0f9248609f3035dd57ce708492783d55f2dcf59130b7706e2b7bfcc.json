{"ast":null,"code":"import { trendingDataExample } from \"@/store/trendingDataExample\";\nimport { ref } from \"vue\";\nexport default {\n  setup() {\n    const trendingData = ref(trendingDataExample.top_gainers);\n    return {\n      trendingData\n    };\n  }\n};","map":{"version":3,"names":["trendingDataExample","ref","setup","trendingData","top_gainers"],"sources":["C:\\Users\\Edwaed\\Desktop\\stock_app\\fund-management-app\\src\\components\\BreakingNews.vue"],"sourcesContent":["Sure, here's an example of how you can use Ant Design Vue's `a-row` and `a-col`\r\ncomponents to create a list using a grid layout: ```vue\r\n<template>\r\n  <div class=\"trending-stocks\">\r\n    <h2>trending stock</h2>\r\n    <a-row :gutter=\"10\">\r\n      <a-col :span=\"24\">\r\n        <a-row :gutter=\"10\">\r\n          <a-col\r\n            :span=\"12\"\r\n            v-for=\"(newsItem, index) in trendingData\"\r\n            :key=\"index\"\r\n          >\r\n            <a-card>\r\n              <a\r\n                href=\"newsItem.short_url\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <div\r\n                  :style=\"{\r\n                    backgroundImage: newsItem.multimedia\r\n                      ? `url(${newsItem.multimedia[0].url})`\r\n                      : 'none',\r\n                  }\"\r\n                  class=\"news-item\"\r\n                >\r\n                  <div class=\"news-content\">\r\n                    <h3 class=\"news-title\">{{ newsItem.title }}</h3>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            </a-card>\r\n          </a-col>\r\n        </a-row>\r\n      </a-col>\r\n    </a-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { trendingDataExample } from \"@/store/trendingDataExample\";\r\nimport { ref } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    const trendingData = ref(trendingDataExample.top_gainers);\r\n\r\n    return { trendingData };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.news-item {\r\n  width: 100%;\r\n  height: 150px;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  border-radius: 8px;\r\n}\r\n\r\n.news-content {\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: left;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.news-title {\r\n  color: #fff;\r\n  margin: 0;\r\n}\r\n</style>\r\n``` In this example, I've used the `a-card` component from Ant Design Vue to\r\ncreate each news item with a card-like layout. The news items are displayed in a\r\ngrid layout using `a-row` and `a-col` components, and the background image for\r\neach news item is set using inline styles. The title of each news item is\r\ndisplayed within the card's content area.\r\n"],"mappings":"AAyCA,SAASA,mBAAkB,QAAS,6BAA6B;AACjE,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,YAAW,GAAIF,GAAG,CAACD,mBAAmB,CAACI,WAAW,CAAC;IAEzD,OAAO;MAAED;IAAa,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}