{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { ref, onMounted, watchEffect } from \"vue\";\nimport axios from \"axios\";\nimport Chart from \"chart.js/auto\";\nexport default {\n  setup() {\n    const route = useRoute();\n    const symbol = ref(route.params.symbol);\n    const dailyStockData = ref(null);\n    const isLoading = ref(true);\n    const isError = ref(false);\n    const fetchDailyStockData = async () => {\n      try {\n        const apiKey = \"4L899V8QWQXTQP85\";\n        const response = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol.value}&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`);\n        if (response.status === 200) {\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\n          isError.value = false;\n        }\n      } catch (error) {\n        console.error(\"Error fetching daily stock data:\", error);\n        isError.value = true;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    const chartCanvas = ref(null);\n    const chartInstance = ref(null);\n    onMounted(() => {\n      fetchDailyStockData();\n      chartInstance.value = new Chart(chartCanvas.value, {\n        type: \"line\",\n        data: {\n          labels: Object.keys(dailyStockData.value || {}),\n          datasets: [{\n            label: \"Stock Price\",\n            data: Object.values(dailyStockData.value || {}).map(entry => entry[\"1. open\"]),\n            borderColor: \"blue\",\n            fill: false\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"day\"\n              }\n            },\n            y: {\n              beginAtZero: false\n            }\n          }\n        }\n      });\n    });\n    watchEffect(() => {\n      isLoading.value = true;\n      fetchDailyStockData();\n    });\n    return {\n      chartCanvas,\n      isLoading,\n      isError,\n      symbol\n    };\n  }\n};","map":{"version":3,"names":["useRoute","ref","onMounted","watchEffect","axios","Chart","setup","route","symbol","params","dailyStockData","isLoading","isError","fetchDailyStockData","apiKey","response","get","value","status","data","error","console","chartCanvas","chartInstance","type","labels","Object","keys","datasets","label","values","map","entry","borderColor","fill","options","responsive","scales","x","time","unit","y","beginAtZero"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\views\\StockDetailPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Stock Detail Page - {{ symbol }}</h1>\r\n    <div v-if=\"isLoading\"><a-spin size=\"large\" tip=\"loading\"></a-spin></div>\r\n    <div v-else>\r\n      <div v-if=\"isError\">\r\n        <p>Error fetching data.</p>\r\n      </div>\r\n      <div v-else>\r\n        <canvas ref=\"chartCanvas\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted, watchEffect } from \"vue\";\r\nimport axios from \"axios\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n    const isError = ref(false);\r\n\r\n    const fetchDailyStockData = async () => {\r\n      try {\r\n        const apiKey = \"4L899V8QWQXTQP85\";\r\n        const response = await axios.get(\r\n          `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n            symbol.value\r\n          }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n          isError.value = false;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching daily stock data:\", error);\r\n        isError.value = true;\r\n      } finally {\r\n        isLoading.value = false;\r\n      }\r\n    };\r\n\r\n    const chartCanvas = ref(null);\r\n    const chartInstance = ref(null);\r\n\r\n    onMounted(() => {\r\n      fetchDailyStockData();\r\n      chartInstance.value = new Chart(chartCanvas.value, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: Object.keys(dailyStockData.value || {}),\r\n          datasets: [\r\n            {\r\n              label: \"Stock Price\",\r\n              data: Object.values(dailyStockData.value || {}).map(\r\n                (entry) => entry[\"1. open\"]\r\n              ),\r\n              borderColor: \"blue\",\r\n              fill: false,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"day\",\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: false,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    });\r\n\r\n    watchEffect(() => {\r\n      isLoading.value = true;\r\n      fetchDailyStockData();\r\n    });\r\n\r\n    return {\r\n      chartCanvas,\r\n      isLoading,\r\n      isError,\r\n      symbol,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAgBA,SAASA,QAAO,QAAS,YAAY;AACrC,SAASC,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AACjD,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,KAAI,MAAO,eAAe;AAEjC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,MAAK,GAAIP,GAAG,CAACM,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,cAAa,GAAIT,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMU,SAAQ,GAAIV,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMW,OAAM,GAAIX,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMY,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,MAAK,GAAI,kBAAkB;QACjC,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAC7B,uEACCR,MAAM,CAACS,KACR,2BAA0BT,MAAM,CAACS,KAAI,KAAM,KAAI,GAAI,MAAK,GAAIH,MAAO,EACtE,CAAC;QAED,IAAIC,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BR,cAAc,CAACO,KAAI,GAAIF,QAAQ,CAACI,IAAI,CAAC,qBAAqB,CAAC;UAC3DP,OAAO,CAACK,KAAI,GAAI,KAAK;QACvB;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDR,OAAO,CAACK,KAAI,GAAI,IAAI;MACtB,UAAU;QACRN,SAAS,CAACM,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,MAAMK,WAAU,GAAIrB,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMsB,aAAY,GAAItB,GAAG,CAAC,IAAI,CAAC;IAE/BC,SAAS,CAAC,MAAM;MACdW,mBAAmB,CAAC,CAAC;MACrBU,aAAa,CAACN,KAAI,GAAI,IAAIZ,KAAK,CAACiB,WAAW,CAACL,KAAK,EAAE;QACjDO,IAAI,EAAE,MAAM;QACZL,IAAI,EAAE;UACJM,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACjB,cAAc,CAACO,KAAI,IAAK,CAAC,CAAC,CAAC;UAC/CW,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,aAAa;YACpBV,IAAI,EAAEO,MAAM,CAACI,MAAM,CAACpB,cAAc,CAACO,KAAI,IAAK,CAAC,CAAC,CAAC,CAACc,GAAG,CAChDC,KAAK,IAAKA,KAAK,CAAC,SAAS,CAC5B,CAAC;YACDC,WAAW,EAAE,MAAM;YACnBC,IAAI,EAAE;UACR,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDd,IAAI,EAAE,MAAM;cACZe,IAAI,EAAE;gBACJC,IAAI,EAAE;cACR;YACF,CAAC;YACDC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFvC,WAAW,CAAC,MAAM;MAChBQ,SAAS,CAACM,KAAI,GAAI,IAAI;MACtBJ,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO;MACLS,WAAW;MACXX,SAAS;MACTC,OAAO;MACPJ;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}