{"ast":null,"code":"import { useRoute } from \"vue-router\";\nimport { ref, onMounted } from \"vue\";\n// import axios from \"axios\";\nimport { Plotly } from \"vue-plotly\";\nexport default {\n  components: {\n    Plotly\n  },\n  setup() {\n    const route = useRoute();\n    const symbol = ref(route.params.symbol);\n    // const dailyStockData = ref(null);\n    const isLoading = ref(true);\n\n    // const fetchDailyStockData = async () => {\n    //   try {\n    //     const apiKey = \"4L899V8QWQXTQP85\";\n    //     const response = await axios.get(\n    //       `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\n    //         symbol.value\n    //       }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\n    //     );\n\n    //     if (response.status === 200) {\n    //       dailyStockData.value = response.data[\"Time Series (Daily)\"];\n    //       isError.value = false;\n    //     }\n    //   } catch (error) {\n    //     console.error(\"Error fetching daily stock data:\", error);\n    //     isError.value = true;\n    //   } finally {\n    //     isLoading.value = false;\n    //   }\n    // };\n    const chartLayout = ref({\n      title: \"Stock Price\",\n      autosize: true,\n      margin: {\n        b: 20,\n        t: 0,\n        l: 30,\n        r: 0\n      },\n      modebar: {\n        orientation: \"v\",\n        remove: [\"lasso\", \"toimage\", \"select\", \"autoscale\"]\n      }\n    });\n    const chartConfig = ref({\n      displaylogo: false,\n      scrollZoom: true,\n      responsive: true\n    });\n    onMounted(() => {\n      //   fetchDailyStockData();\n      isLoading.value = false;\n    });\n    return {\n      chartData: [{\n        x: [1, 2, 3, 4],\n        y: [10, 15, 13, 17],\n        type: \"scatter\"\n      }],\n      chartLayout,\n      chartConfig,\n      isLoading,\n      symbol\n    };\n  }\n};","map":{"version":3,"names":["useRoute","ref","onMounted","Plotly","components","setup","route","symbol","params","isLoading","chartLayout","title","autosize","margin","b","t","l","r","modebar","orientation","remove","chartConfig","displaylogo","scrollZoom","responsive","value","chartData","x","y","type"],"sources":["C:\\Users\\Edwaed\\Desktop\\fund-management-app\\src\\components\\StockChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"isLoading\">\r\n      <a-spin size=\"large\" tip=\"loading\"></a-spin>\r\n    </div>\r\n    <div v-else>\r\n      <Plotly :data=\"chartData\" :layout=\"chartLayout\"></Plotly>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { ref, onMounted } from \"vue\";\r\n// import axios from \"axios\";\r\nimport {Plotly} from \"vue-plotly\";\r\n\r\nexport default {\r\n  components: { Plotly },\r\n  setup() {\r\n    const route = useRoute();\r\n    const symbol = ref(route.params.symbol);\r\n    // const dailyStockData = ref(null);\r\n    const isLoading = ref(true);\r\n\r\n    // const fetchDailyStockData = async () => {\r\n    //   try {\r\n    //     const apiKey = \"4L899V8QWQXTQP85\";\r\n    //     const response = await axios.get(\r\n    //       `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${\r\n    //         symbol.value\r\n    //       }&outputsize=full&apikey=${symbol.value === \"IBM\" ? \"demo\" : apiKey}`\r\n    //     );\r\n\r\n    //     if (response.status === 200) {\r\n    //       dailyStockData.value = response.data[\"Time Series (Daily)\"];\r\n    //       isError.value = false;\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(\"Error fetching daily stock data:\", error);\r\n    //     isError.value = true;\r\n    //   } finally {\r\n    //     isLoading.value = false;\r\n    //   }\r\n    // };\r\n    const chartLayout = ref({\r\n      title: \"Stock Price\",\r\n      autosize: true,\r\n      margin: { b: 20, t: 0, l: 30, r: 0 },\r\n      modebar: {\r\n        orientation: \"v\",\r\n        remove: [\"lasso\", \"toimage\", \"select\", \"autoscale\"],\r\n      },\r\n    });\r\n    const chartConfig = ref({\r\n      displaylogo: false,\r\n      scrollZoom: true,\r\n      responsive: true,\r\n    });\r\n    onMounted(() => {\r\n      //   fetchDailyStockData();\r\n      isLoading.value = false;\r\n    });\r\n\r\n    return {\r\n      chartData: [\r\n        {\r\n          x: [1, 2, 3, 4],\r\n          y: [10, 15, 13, 17],\r\n          type: \"scatter\",\r\n        },\r\n      ],\r\n      chartLayout,\r\n      chartConfig,\r\n      isLoading,\r\n      symbol,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAYA,SAASA,QAAO,QAAS,YAAY;AACrC,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC;AACA,SAAQC,MAAM,QAAO,YAAY;AAEjC,eAAe;EACbC,UAAU,EAAE;IAAED;EAAO,CAAC;EACtBE,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,MAAK,GAAIN,GAAG,CAACK,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC;IACvC;IACA,MAAME,SAAQ,GAAIR,GAAG,CAAC,IAAI,CAAC;;IAE3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMS,WAAU,GAAIT,GAAG,CAAC;MACtBU,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAC;MACpCC,OAAO,EAAE;QACPC,WAAW,EAAE,GAAG;QAChBC,MAAM,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW;MACpD;IACF,CAAC,CAAC;IACF,MAAMC,WAAU,GAAIpB,GAAG,CAAC;MACtBqB,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE;IACd,CAAC,CAAC;IACFtB,SAAS,CAAC,MAAM;MACd;MACAO,SAAS,CAACgB,KAAI,GAAI,KAAK;IACzB,CAAC,CAAC;IAEF,OAAO;MACLC,SAAS,EAAE,CACT;QACEC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACfC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnBC,IAAI,EAAE;MACR,CAAC,CACF;MACDnB,WAAW;MACXW,WAAW;MACXZ,SAAS;MACTF;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}